[{"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js":"1","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js":"2","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js":"3","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js":"4","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js":"5","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js":"6","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js":"7","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js":"8","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js":"9","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js":"10","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js":"11","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js":"12","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js":"13","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js":"14","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js":"15","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js":"16","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js":"17","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js":"18","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js":"19","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js":"20","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js":"21","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js":"22","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js":"23","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js":"24","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js":"25","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js":"26","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js":"27","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js":"28","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js":"29","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js":"30","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js":"31","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js":"32","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js":"33"},{"size":612,"mtime":1619126873346,"results":"34","hashOfConfig":"35"},{"size":375,"mtime":1619126873346,"results":"36","hashOfConfig":"35"},{"size":503,"mtime":1619126873326,"results":"37","hashOfConfig":"35"},{"size":753,"mtime":1619126873345,"results":"38","hashOfConfig":"35"},{"size":683,"mtime":1619126873344,"results":"39","hashOfConfig":"35"},{"size":5761,"mtime":1619961406944,"results":"40","hashOfConfig":"35"},{"size":7140,"mtime":1619961438832,"results":"41","hashOfConfig":"35"},{"size":1956,"mtime":1619126873329,"results":"42","hashOfConfig":"35"},{"size":255,"mtime":1619126873343,"results":"43","hashOfConfig":"35"},{"size":286,"mtime":1619126873341,"results":"44","hashOfConfig":"35"},{"size":293,"mtime":1619126873340,"results":"45","hashOfConfig":"35"},{"size":16364,"mtime":1619193217107,"results":"46","hashOfConfig":"35"},{"size":295,"mtime":1619126873341,"results":"47","hashOfConfig":"35"},{"size":227,"mtime":1619126873342,"results":"48","hashOfConfig":"35"},{"size":11343,"mtime":1619191365991,"results":"49","hashOfConfig":"35"},{"size":98,"mtime":1619126873343,"results":"50","hashOfConfig":"35"},{"size":4325,"mtime":1619126873338,"results":"51","hashOfConfig":"35"},{"size":7329,"mtime":1620435375251,"results":"52","hashOfConfig":"35"},{"size":15309,"mtime":1619282145839,"results":"53","hashOfConfig":"35"},{"size":3177,"mtime":1619126873331,"results":"54","hashOfConfig":"35"},{"size":4317,"mtime":1619126873336,"results":"55","hashOfConfig":"35"},{"size":6686,"mtime":1619126873334,"results":"56","hashOfConfig":"35"},{"size":3806,"mtime":1619126873332,"results":"57","hashOfConfig":"35"},{"size":14507,"mtime":1619126873333,"results":"58","hashOfConfig":"35"},{"size":4303,"mtime":1619126873334,"results":"59","hashOfConfig":"35"},{"size":240,"mtime":1619126873328,"results":"60","hashOfConfig":"35"},{"size":5425,"mtime":1619126873327,"results":"61","hashOfConfig":"35"},{"size":210,"mtime":1619126873344,"results":"62","hashOfConfig":"35"},{"size":155,"mtime":1619126873314,"results":"63","hashOfConfig":"35"},{"size":10494,"mtime":1619126873339,"results":"64","hashOfConfig":"35"},{"size":761,"mtime":1619126873325,"results":"65","hashOfConfig":"35"},{"size":410,"mtime":1619126873347,"results":"66","hashOfConfig":"35"},{"size":3820,"mtime":1620433918964,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"arcl43",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js",[],["138","139"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js",["140"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Input,\r\n  Form,\r\n  Button,\r\n  Select,\r\n  message,\r\n  Checkbox,\r\n  Card,\r\n  AutoComplete,\r\n} from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport API from \"../../api\";\r\nimport { registerStyle, headStyle } from \"../../assets/styles/styles\";\r\n\r\nconst ShopRegister = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const [autoCompleteResult, setAutoCompleteResult] = useState([]);\r\n  const { setIsLoggedIn, setToken } = useContext(UserContext);\r\n  const [cities, setCities] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const { Option } = Select;\r\n  const { TextArea } = Input;\r\n\r\n  const handleSubmit = (values) => {\r\n    const shopRegisterModel = {\r\n      Email: values.email,\r\n      Password: values.password,\r\n      ShopTitle: values.shopTitle,\r\n      Address: values.shopAddress,\r\n      ShopDescription: values.shopDescription,\r\n      OwnerName: values.ownerName,\r\n      PhoneNumber: values.phone,\r\n      WebSite: values.website,\r\n      CityId: values.city,\r\n      DistrictId: values.district,\r\n      ZoneId: values.zone,\r\n      TaxNumber: values.taxNumber,\r\n      TaxAddress: values.taxAddress,\r\n      Categories: values.categories,\r\n    };\r\n    setLoading(true);\r\n    API.post(`shop/register`, shopRegisterModel)\r\n      .then((res) => {\r\n        localStorage.setItem(\"auth_token\", res.data.response);\r\n        message.success(\"You've Registered Successfuly!\");\r\n        setIsLoggedIn(true);\r\n        setToken(res.data.response);\r\n        setLoading(false);\r\n        history.push(\"/\");\r\n      })\r\n      .catch((error) => {\r\n        if (error.response !== undefined) {\r\n          message.error(error.response.data);\r\n        } else {\r\n          message.error(\r\n            \"Şüpheli karakterler tespit edildi. < > & gibi karakterleri kaldırıp lütfen tekrar deneyiniz.\"\r\n          );\r\n        }\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  const prefixSelector = (\r\n    <Form.Item name=\"prefix\" noStyle>\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"+90\">+90</Option>\r\n      </Select>\r\n    </Form.Item>\r\n  );\r\n\r\n  const onWebsiteChange = (value) => {\r\n    if (!value) {\r\n      setAutoCompleteResult([]);\r\n    } else {\r\n      setAutoCompleteResult(\r\n        [\".com\", \".org\", \".net\"].map((domain) => `${value}${domain}`)\r\n      );\r\n    }\r\n  };\r\n\r\n  const getCities = async () => {\r\n    await API.get(`place/getCities`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setCities(res.data);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Şehirleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const getCategories = async () => {\r\n    await API.get(`categories/getCategories`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setCategories(res.data);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Kategorileri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const getDistricts = async (cityId) => {\r\n    await API.get(`place/getDistrictsByCityId?cityId=${cityId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setDistricts(res.data);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"İlçeleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const getZones = async (districtId) => {\r\n    await API.get(`place/GetZonesByDistrictId?districtId=${districtId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setZones(res.data);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Bölgeleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const handleCityChange = (value) => {\r\n    setDistricts([]);\r\n    form.setFieldsValue({\r\n      district: \"\",\r\n      zone: \"\",\r\n    });\r\n    getDistricts(value);\r\n  };\r\n\r\n  const handleDistrictChange = (value) => {\r\n    setZones([]);\r\n    form.setFieldsValue({\r\n      zone: \"\",\r\n    });\r\n    getZones(value);\r\n  };\r\n\r\n  const handleZoneChange = (value) => {};\r\n\r\n  const websiteOptions = autoCompleteResult.map((website) => ({\r\n    label: website,\r\n    value: website,\r\n  }));\r\n\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 14,\r\n        offset: 6,\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCities();\r\n    getCategories();\r\n  }, []);\r\n\r\n  return (\r\n    <div style={registerStyle}>\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Card\r\n            title=\"Yeni Mağaza Kaydı\"\r\n            hoverable\r\n            bordered={true}\r\n            style={{ width: \"100%\" }}\r\n            headStyle={headStyle}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              form={form}\r\n              name=\"register\"\r\n              layout=\"horizontal\"\r\n              onFinish={handleSubmit}\r\n            >\r\n              <Form.Item\r\n                name=\"shopTitle\"\r\n                label=\"Mağaza Unvanı\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Mağaza Unvanı Giriniz\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Mağaza Unvanı\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"ownerName\"\r\n                label=\"Mağaza Sahibi\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Mağaza Sahibini Giriniz\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Mağaza Sahibi\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"taxNumber\" label=\"Vergi Numarası\">\r\n                <Input placeholder=\"Vergi Numarası\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"taxAddress\" label=\"Vergi Adresi\">\r\n                <Input placeholder=\"Vergi Adresi\" />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"phone\"\r\n                label=\"Telefon Numarası\"\r\n                rules={[\r\n                  {\r\n                    max: 10,\r\n                    message:\r\n                      \"Telefon Numarası Belirlenen Max Karakter Sınırını Geçemezsiniz\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input addonBefore={prefixSelector} style={{ width: \"100%\" }} />\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"website\" label=\"Website\">\r\n                <AutoComplete\r\n                  options={websiteOptions}\r\n                  onChange={onWebsiteChange}\r\n                  placeholder=\"website\"\r\n                >\r\n                  <Input />\r\n                </AutoComplete>\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"shopDescription\"\r\n                label=\"Mağaza Açıklaması\"\r\n                rules={[\r\n                  {\r\n                    max: 500,\r\n                    message:\r\n                      \"Mağaza Açıklaması En Fazla 500 Karakterden Oluşabilir\",\r\n                  },\r\n                ]}\r\n              >\r\n                <TextArea placeholder=\"Mağaza Açıklaması\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"city\"\r\n                label=\"İl\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 14 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen İl Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleCityChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {cities.map((city, key) => {\r\n                    return (\r\n                      <Option value={city.id} key={city.id}>\r\n                        {city.cityName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"district\"\r\n                label=\"İlçe\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 14 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen İlçe Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleDistrictChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {districts.map((district, key) => {\r\n                    return (\r\n                      <Option value={district.id} key={district.id}>\r\n                        {district.districtName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 14 }}\r\n                name=\"zone\"\r\n                label=\"Köy/Mahalle\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Semt/Mahalle Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleZoneChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {zones.map((zone, key) => {\r\n                    return (\r\n                      <Option value={zone.id} key={zone.id}>\r\n                        {zone.zoneName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item name=\"shopAddress\" label=\"Mağaza Adresi\">\r\n                <TextArea placeholder=\"Mağaza Adresi\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"categories\"\r\n                label=\"Kategoriler\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 14 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Kategori(ler) Seçiniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select mode=\"tags\" size={\"default\"} style={{ width: \"100%\" }}>\r\n                  {categories.map((category, key) => {\r\n                    return (\r\n                      <Option value={category.id} key={category.id}>\r\n                        {category.categoryName}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[\r\n                  {\r\n                    type: \"email\",\r\n                    message: \"Email Adresinizi Doğru Formatta Değil!\",\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Email Adresinizi Giriniz\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input placeholder=\"Lütfen Email Adresinizi Giriniz\" />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"password\"\r\n                label=\"Şifre\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Şifrenizi Giriniz\",\r\n                  },\r\n                  {\r\n                    min: 8,\r\n                    message: \"Şifreniz En Az 8 Karakterden Oluşmalıdır\",\r\n                  },\r\n                ]}\r\n                hasFeedback\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n              <Form.Item\r\n                name=\"confirm\"\r\n                label=\"Şifreyi Onayla\"\r\n                dependencies={[\"password\"]}\r\n                hasFeedback\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Şifrenizi Onaylayınız\",\r\n                  },\r\n                  ({ getFieldValue }) => ({\r\n                    validator(_, value) {\r\n                      if (!value || getFieldValue(\"password\") === value) {\r\n                        return Promise.resolve();\r\n                      }\r\n                      return Promise.reject(\"Girdiğiniz Şifreler Eşleşmiyor!\");\r\n                    },\r\n                  }),\r\n                ]}\r\n              >\r\n                <Input.Password />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                name=\"agreement\"\r\n                valuePropName=\"checked\"\r\n                rules={[\r\n                  {\r\n                    validator: (_, value) =>\r\n                      value\r\n                        ? Promise.resolve()\r\n                        : Promise.reject(\"Should accept agreement\"),\r\n                  },\r\n                ]}\r\n                {...tailFormItemLayout}\r\n              >\r\n                <Checkbox>\r\n                  I have read the <a href=\"\">agreement</a>\r\n                </Checkbox>\r\n              </Form.Item>\r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  className=\"login-form-button\"\r\n                  loading={loading}\r\n                  htmlType=\"submit\"\r\n                >\r\n                  Mağaza Aç\r\n                </Button>\r\n                Zaten Üye misin? <Link to=\"/login\">Giriş Yap</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ShopRegister;\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js",["141"],"import React, { useState, useContext } from \"react\";\r\nimport { Row, Col, Input, Form, Button, Checkbox, message, Card } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport API from \"../../api\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { loginStyle, headStyle } from \"../../assets/styles/styles\";\r\n\r\nconst UserLogin = () => {\r\n  const [form] = Form.useForm();\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const { setIsLoggedIn, setToken } = useContext(UserContext);\r\n  const handleSubmit = async (values) => {\r\n    setLoading(true);\r\n    const user = {\r\n      Email: values.email,\r\n      Password: values.password,\r\n    };\r\n    await API.post(`user/authenticate`, user)\r\n      .then((res) => {\r\n        if (res.status) {\r\n          const token = res.data.response;\r\n          localStorage.setItem(\"auth_token\", res.data.response);\r\n          setToken(token);\r\n          message.success(\"Hoşgeldiniz!\");\r\n          setIsLoggedIn(true);\r\n          setLoading(false);\r\n          history.push(\"/\");\r\n        } else {\r\n          message.error(res.response);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response !== undefined) {\r\n          message.error(error.response.data);\r\n        } else {\r\n          message.error(\r\n            \"Şüpheli karakterler tespit edildi. < > & gibi karakterleri kaldırıp lütfen tekrar deneyiniz.\"\r\n          );\r\n        }\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 6,\r\n    },\r\n    wrapperCol: {\r\n      span: 14,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={loginStyle}>\r\n      <Row>\r\n        <Col span={12} offset={6}>\r\n          <Card\r\n            title=\"Giriş Yap\"\r\n            hoverable\r\n            bordered={true}\r\n            style={{ width: \"100%\" }}\r\n            headStyle={headStyle}\r\n          >\r\n            <Form\r\n              {...layout}\r\n              form={form}\r\n              name=\"login\"\r\n              layout=\"horizontal\"\r\n              onFinish={handleSubmit}\r\n            >\r\n              <Form.Item\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Email Adresi Giriniz\",\r\n                  },\r\n                  {\r\n                    max: 50,\r\n                    message:\r\n                      \"Email Adresiniz En Fazla 50 Karakterden Oluşmalıdır\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  placeholder=\"Lütfen Email Giriniz\"\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Şifre\"\r\n                name=\"password\"\r\n                rules={[\r\n                  { required: true, message: \"Lütfen Şifrenizi Giriniz\" },\r\n                ]}\r\n              >\r\n                <Input.Password\r\n                  placeholder=\"Lütfen Şifrenizi Giriniz\"\r\n                  prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                />\r\n              </Form.Item>\r\n\r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n                <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                  <Checkbox>Beni Hatırla</Checkbox>\r\n                </Form.Item>\r\n\r\n                <a className=\"login-form-forgot\" href=\"\">\r\n                  <Link to=\"/forgotPassword\">Şifreni mi Unuttun?</Link>\r\n                </a>\r\n              </Form.Item>\r\n\r\n              <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 6 }}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  loading={loading}\r\n                  className=\"login-form-button\"\r\n                  htmlType=\"submit\"\r\n                >\r\n                  Giriş Yap\r\n                </Button>\r\n                Henüz Üye Değilmisin? <Link to=\"/signUp\">Üye Ol</Link>\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default UserLogin;\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js",["142","143","144","145"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { Table, Row, Col, Button, Typography, Input, Modal } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tag, Space, message, Spin, Select } from \"antd\";\r\nimport API from \"../../api\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport { serialize } from \"../../utils\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MyAppointments(props) {\r\n  const { Title } = Typography;\r\n  const history = useHistory();\r\n  const [myAppointments, setAppointmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const status = props.status;\r\n  const header = props.header;\r\n  const { token } = useContext(UserContext);\r\n  const {\r\n    setFirstBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    setLastBreadcrumb,\r\n  } = useContext(BreadCrumbContext);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [appointmentCancelReason, setAppointmentCancelReason] = useState(\"\");\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(0);\r\n  const [selectedShopId, setSelectedShopId] = useState(0);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const connect = new HubConnectionBuilder()\r\n      .withUrl(appointmentHub)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    try {\r\n      connect.start();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  // const sendMessage = async (appointmentId, cancel, shopId) => {\r\n  //   if (connection.state == \"Connected\") {\r\n  //     await connection.send(\r\n  //       \"SendMessage\",\r\n  //       String(appointmentId),\r\n  //       cancel,\r\n  //       String(shopId)\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  const showModel = (obj) => {\r\n    setIsModalVisible(true);\r\n    setSelectedAppointmentId(obj.id);\r\n    setSelectedShopId(obj.shopId);\r\n    setAppointmentCancelReason(\"\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    cancelAppointment(\r\n      selectedAppointmentId,\r\n      appointmentCancelReason,\r\n      selectedShopId\r\n    );\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const pageHeader = header;\r\n  const { Option } = Select;\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/form\");\r\n  };\r\n\r\n  const handleSortChange = useCallback((value) => {\r\n    setSortValue(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch({ pagination });\r\n    setFirstBreadcrumb(\"Anasayfa\");\r\n    setSecondBreadcrumb(\"Randevu Bilgilerim\");\r\n    setLastBreadcrumb(header);\r\n  }, [\r\n    searchText,\r\n    sortValue,\r\n    setFirstBreadcrumb,\r\n    setLastBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    header,\r\n    //pagination,\r\n  ]);\r\n\r\n  const fetch = async (params) => {\r\n    setLoading(true);\r\n    var filterAppointmentDto = serialize({\r\n      Current: params.pagination.current,\r\n      PageSize: params.pagination.pageSize,\r\n      Status: status,\r\n      SearchText: searchText,\r\n      SortValue: sortValue,\r\n    });\r\n    await API.get(`appointment/filter?${filterAppointmentDto}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAppointmentData(res.data.item1);\r\n        setLoading(false);\r\n        setPagination({\r\n          ...params.pagination,\r\n          total: res.data.item2,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 403) {\r\n          message.error(\"Bu Sayfayı Görmeye Yetkili Değilsiniz!\");\r\n          return;\r\n        }\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          message.error(\"Randevuları Getirme Esnasında Hata ile Karşılaşıldı!\");\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const cancelAppointment = async (appointmentId, cancelReasonText, shopId) => {\r\n    if (window.confirm(\"Randevuyu İptal Etmek İstediğinize Emin misiniz?\")) {\r\n      const cancelReason = {\r\n        CancelReason: cancelReasonText,\r\n      };\r\n      await API.put(\r\n        `appointment/cancelAppointment/${appointmentId}`,\r\n        cancelReason,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          message.success(res.data.response);\r\n          fetch({ pagination });\r\n          //sendMessage(appointmentId, cancelReasonText, shopId);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else if (error.response.status === 404) {\r\n            message.warning(error.response.data);\r\n          } else {\r\n            message.error(error.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const convertToFullDate = (datetime) => {\r\n    var d = new Date(datetime);\r\n    var month = d.getUTCMonth() + 1; //months from 1-12\r\n    var day = d.getDate();\r\n    var year = d.getUTCFullYear();\r\n\r\n    var minutes = d.getMinutes();\r\n    var hour = d.getHours();\r\n\r\n    var newdate = `${day}.${month}.${year} ${hour}:${minutes}`;\r\n    return newdate;\r\n  };\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    fetch({\r\n      pagination,\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    setPagination({\r\n      current: 1,\r\n      pageSize: 10,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Mağaza\",\r\n      dataIndex: \"shopTitle\",\r\n      key: \"shopTitle\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Randevu Başlangıç Tarihi\",\r\n      dataIndex: \"appointmentBeginDate\",\r\n      key: \"appointmentBeginDate\",\r\n      render: (date) => <a>{convertToFullDate(date)}</a>,\r\n    },\r\n    {\r\n      title: \"Randevu Bitiş Tarihi\",\r\n      dataIndex: \"appointmentEndDate\",\r\n      key: \"appointmentEndDate\",\r\n      render: (date) => <a>{convertToFullDate(date)}</a>,\r\n    },\r\n    {\r\n      title: \"Durumu\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (\r\n        <div>\r\n          <Tag color={status === 1 ? \"green\" : \"red\"}>\r\n            {status === 1 ? \"Aktif\" : \"Pasif\"}\r\n          </Tag>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Randevu Aldığım Hizmetler\",\r\n      key: \"appointmentServices\",\r\n      dataIndex: \"appointmentServices\",\r\n      render: (appointmentServices) => (\r\n        <div>\r\n          {appointmentServices.map((service) => {\r\n            let color =\r\n              service.services.serviceName.length > 5 ? \"geekblue\" : \"green\";\r\n            if (service.services.serviceName === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={service.services.id}>\r\n                {service.services.serviceName.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n\r\n      render: (text, obj) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            disabled={obj.status === 0}\r\n            block\r\n            type={obj.status === 1 ? \"danger\" : \"primary\"}\r\n            onClick={() => showModel(obj)}\r\n          >\r\n            {obj.status === 1 ? \"İptal Et\" : \"Aktif Et\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  myAppointments.map((data) => {\r\n    data.shopTitle = data.shops.shopTitle;\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={18}>\r\n          <Title level={2}>{pageHeader}</Title>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Button onClick={handleClick} block type=\"primary\">\r\n            Yeni Randevu Talep Et\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Input placeholder=\"Ara..\" onChange={handleChangeSearch} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Select\r\n            defaultValue=\"Seçiniz\"\r\n            onChange={handleSortChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Option key={\"ascByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Artan\r\n            </Option>\r\n            <Option key={\"descByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Azalan\r\n            </Option>\r\n            <Option key={\"ascByAppointmentDate\"}>\r\n              En Yakın Tarihli Randevuya Göre\r\n            </Option>\r\n            <Option key={\"descByAppointmentDate\"}>\r\n              En Uzak Tarihli Randevuya Göre\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={24}>\r\n          {loading ? (\r\n            <div className=\"spinClass\">\r\n              <Space size=\"middle\">\r\n                <Spin size=\"large\" />\r\n              </Space>\r\n            </div>\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              rowKey={(record) => record.id}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n              dataSource={myAppointments}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Randevu İptal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        okButtonProps={{\r\n          disabled: appointmentCancelReason === \"\" ? true : false,\r\n        }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>Randevu İptal Nedeni</Col>\r\n        </Row>\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>\r\n            <TextArea\r\n              showCount\r\n              value={appointmentCancelReason}\r\n              onChange={(event) =>\r\n                setAppointmentCancelReason(event.target.value)\r\n              }\r\n              maxLength={500}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":461,"column":35,"nodeType":"152","endLine":461,"endColumn":46},{"ruleId":"150","severity":1,"message":"151","line":113,"column":17,"nodeType":"152","endLine":113,"endColumn":58},{"ruleId":"153","severity":1,"message":"154","line":98,"column":6,"nodeType":"155","endLine":106,"endColumn":4,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":216,"column":25,"nodeType":"152","endLine":216,"endColumn":28},{"ruleId":"150","severity":1,"message":"157","line":222,"column":25,"nodeType":"152","endLine":222,"endColumn":28},{"ruleId":"150","severity":1,"message":"157","line":228,"column":25,"nodeType":"152","endLine":228,"endColumn":28},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetch' and 'pagination'. Either include them or remove the dependency array.","ArrayExpression",["160"],"The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]",{"range":"163","text":"164"},[2904,3050],"[searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]"]