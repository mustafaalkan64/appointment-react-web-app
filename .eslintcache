[{"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\index.js":"1","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\reportWebVitals.js":"2","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\App.js":"3","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\contexts\\UserContext.js":"4","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js":"5","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js":"6","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\api.js":"7","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js":"8","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js":"9","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js":"10","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js":"11","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\UserSettings.js":"12","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js":"13","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js":"14","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\UserProfile.js":"15","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js":"16","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js":"17","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js":"18","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js":"19","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js":"20","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js":"21","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js":"22","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js":"23","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js":"24","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js":"25","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js":"26","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js":"27","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js":"28","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js":"29","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js":"30","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\Home.js":"31","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js":"32","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js":"33","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Admin\\Comments.js":"34","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\constUrls.js":"35","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js":"36","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\MainFooter.js":"37","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js":"38","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\assets\\styles\\styles.js":"39","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\utils.js":"40","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\NewAppointment.js":"41","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopServicesWithPrices.js":"42"},{"size":612,"mtime":1625148662815,"results":"43","hashOfConfig":"44"},{"size":375,"mtime":1625148662816,"results":"45","hashOfConfig":"44"},{"size":645,"mtime":1625148662754,"results":"46","hashOfConfig":"44"},{"size":753,"mtime":1625148662811,"results":"47","hashOfConfig":"44"},{"size":683,"mtime":1625216111796,"results":"48","hashOfConfig":"44"},{"size":8550,"mtime":1638192721545,"results":"49","hashOfConfig":"44"},{"size":155,"mtime":1625148662721,"results":"50","hashOfConfig":"44"},{"size":8016,"mtime":1638192721533,"results":"51","hashOfConfig":"44"},{"size":5799,"mtime":1638192721519,"results":"52","hashOfConfig":"44"},{"size":255,"mtime":1625148662806,"results":"53","hashOfConfig":"44"},{"size":286,"mtime":1625148662800,"results":"54","hashOfConfig":"44"},{"size":98,"mtime":1625148662805,"results":"55","hashOfConfig":"44"},{"size":293,"mtime":1625148662797,"results":"56","hashOfConfig":"44"},{"size":295,"mtime":1625148662799,"results":"57","hashOfConfig":"44"},{"size":12251,"mtime":1625148662804,"results":"58","hashOfConfig":"44"},{"size":11295,"mtime":1638192721556,"results":"59","hashOfConfig":"44"},{"size":4512,"mtime":1638192721567,"results":"60","hashOfConfig":"44"},{"size":7340,"mtime":1625148662789,"results":"61","hashOfConfig":"44"},{"size":14972,"mtime":1625148662792,"results":"62","hashOfConfig":"44"},{"size":4946,"mtime":1625148662786,"results":"63","hashOfConfig":"44"},{"size":5750,"mtime":1625148662783,"results":"64","hashOfConfig":"44"},{"size":3869,"mtime":1625148662791,"results":"65","hashOfConfig":"44"},{"size":4317,"mtime":1625148662788,"results":"66","hashOfConfig":"44"},{"size":4954,"mtime":1625148662782,"results":"67","hashOfConfig":"44"},{"size":2921,"mtime":1625148662772,"results":"68","hashOfConfig":"44"},{"size":7281,"mtime":1625148662778,"results":"69","hashOfConfig":"44"},{"size":3757,"mtime":1625148662774,"results":"70","hashOfConfig":"44"},{"size":14682,"mtime":1625148662775,"results":"71","hashOfConfig":"44"},{"size":5425,"mtime":1625148662756,"results":"72","hashOfConfig":"44"},{"size":4230,"mtime":1625148662777,"results":"73","hashOfConfig":"44"},{"size":20605,"mtime":1638192721481,"results":"74","hashOfConfig":"44"},{"size":240,"mtime":1625148662762,"results":"75","hashOfConfig":"44"},{"size":26091,"mtime":1638192721503,"results":"76","hashOfConfig":"44"},{"size":7326,"mtime":1638192721467,"results":"77","hashOfConfig":"44"},{"size":210,"mtime":1625148662808,"results":"78","hashOfConfig":"44"},{"size":10256,"mtime":1638192721593,"results":"79","hashOfConfig":"44"},{"size":311,"mtime":1625148662759,"results":"80","hashOfConfig":"44"},{"size":1701,"mtime":1625148662761,"results":"81","hashOfConfig":"44"},{"size":762,"mtime":1625148662749,"results":"82","hashOfConfig":"44"},{"size":410,"mtime":1625148662817,"results":"83","hashOfConfig":"44"},{"size":19752,"mtime":1638452403656,"results":"84","hashOfConfig":"44"},{"size":9815,"mtime":1638192721578,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"10nm0p9",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"88"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"88"},"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\index.js",[],["176","177"],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\App.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\contexts\\UserContext.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\api.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js",["178","179","180","181"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Menu, message, notification, Image, Skeleton } from \"antd\";\r\nimport API from \"../../api\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport { imageUrlDirectory } from \"../../constUrls\";\r\n\r\nimport {\r\n  UserOutlined,\r\n  HomeOutlined,\r\n  CheckSquareOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router\";\r\nconst { SubMenu } = Menu;\r\n\r\nconst SideNav = () => {\r\n  const history = useHistory();\r\n  const {\r\n    setIsLoggedIn,\r\n    setToken,\r\n    userRole,\r\n    currentShop,\r\n    token,\r\n  } = useContext(UserContext);\r\n  // const token = localStorage.getItem(\"auth_token\");\r\n  const [logo, setLogo] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const connect = new HubConnectionBuilder()\r\n  //     .withUrl(appointmentHub)\r\n  //     .withAutomaticReconnect()\r\n  //     .build();\r\n\r\n  //   try {\r\n  //     connect.start();\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n\r\n  //   connect.on(\"broadcastMessage\", (appointmentId, cancelText, shopId) => {\r\n  //     if (String(currentShop) === shopId) {\r\n  //       notification.open({\r\n  //         message: \"Randevu İptal Bildirimi!\",\r\n  //         description: `${cancelText} nedeniyle iptal edilmiştir!`,\r\n  //       });\r\n  //     }\r\n  //   });\r\n\r\n  // }, [currentShop]);\r\n\r\n  useEffect(() => {\r\n    if (userRole === \"Shop\") {\r\n      setLoading(true);\r\n      const getShopLogo = async () => {\r\n        await API.get(`shop/getShopLogo`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n          .then((res) => {\r\n            setLogo(imageUrlDirectory + res.data);\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 401) {\r\n              history.push(\"/login\");\r\n            } else {\r\n              message.error(error.response.data);\r\n            }\r\n            setLoading(false);\r\n          });\r\n      };\r\n      getShopLogo();\r\n    }\r\n  }, [\r\n    history,\r\n    token,\r\n    userRole\r\n  ]);\r\n\r\n  const handleMyActiveAppointments = () => {\r\n    history.push(\"/myActiveAppointments\");\r\n  };\r\n  const handleAppointmentPlan = () => {\r\n    history.push(\"/appointmentPlan\");\r\n  };\r\n  const handleMyCanceledAppointments = () => {\r\n    history.push(\"/myCanceledAppointments\");\r\n  };\r\n  const handleUserProfile = () => {\r\n    history.push(\"/userProfile\");\r\n  };\r\n  const handleShopProfile = () => {\r\n    history.push(\"/shopProfile\");\r\n  };\r\n  const handleChangeMyPassword = () => {\r\n    history.push(\"/changeMyPassword\");\r\n  };\r\n  const handleMyPreviousAppointments = () => {\r\n    history.push(\"/myPreviousAppointments\");\r\n  };\r\n  const handleShopServices = () => {\r\n    history.push(\"/shopServices\");\r\n  };\r\n  const handleShopCategories = () => {\r\n    history.push(\"/shopCategories\");\r\n  };\r\n  const handleShopImages = () => {\r\n    history.push(\"/shopImages\");\r\n  };\r\n  const handleShopNotifications = () => {\r\n    history.push(\"/shopNotifications\");\r\n  };\r\n  const handleMyOncomingAppointments = () => {\r\n    history.push(\"/myOncomingAppointments\");\r\n  };\r\n  const handleAppointmentCalender = () => {\r\n    history.push(\"/shopAppointmentCalender\");\r\n  }\r\n  const handleComments = () => {\r\n    history.push(\"/comments\");\r\n  }\r\n  const redirectHomePage = () => {\r\n    history.push(\"/\");\r\n  };\r\n  const handlePersons = () => {\r\n    history.push(\"/saloonPersons\");\r\n  }\r\n  const handleServicePrices = () => {\r\n    history.push(\"/servicePrices\");\r\n  }\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"auth_token\");\r\n    setIsLoggedIn(false);\r\n    setToken(null);\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <div\r\n        style={{\r\n          height: \"32px\",\r\n          margin: \"14px\",\r\n        }}\r\n      > {userRole === \"Shop\" ? (loading ? (<Skeleton.Image style={{ height: 40 }} />) : (<Image height=\"40px\" src={logo} />)) : (<div><Image height=\"40px\" src={imageUrlDirectory + \"empty-img.png\"} /></div>)}\r\n\r\n      </div>\r\n\r\n      <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n        <Menu.Item key=\"1\" icon={<HomeOutlined />} onClick={redirectHomePage}>\r\n          <span>Ana Sayfa</span>\r\n        </Menu.Item>\r\n\r\n        {userRole === \"User\" ? (\r\n          <SubMenu\r\n            key=\"subAppointments\"\r\n            icon={<CheckSquareOutlined />}\r\n            title={<span>Randevu Bilgilerim</span>}\r\n          >\r\n            <Menu.Item key=\"4\" onClick={handleMyActiveAppointments}>\r\n              Aktif Randevularım\r\n            </Menu.Item>\r\n            <Menu.Item key=\"5\" onClick={handleMyCanceledAppointments}>\r\n              İptal Edilen Randevularım\r\n            </Menu.Item>\r\n            <Menu.Item key=\"6\" onClick={handleMyOncomingAppointments}>\r\n              Yaklaşan Randevularım\r\n            </Menu.Item>\r\n            <Menu.Item key=\"7\" onClick={handleMyPreviousAppointments}>\r\n              Geçmiş Randevularım\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        ) : (\r\n          <>\r\n            {userRole === \"Shop\" ? (\r\n              <SubMenu\r\n                key=\"subAppointments\"\r\n                icon={<CheckSquareOutlined />}\r\n                title={<span>Randevu Bilgilerim</span>}\r\n              >\r\n                <Menu.Item key=\"8\" onClick={handleAppointmentPlan}>\r\n                  Randevu Planı Yönetme\r\n              </Menu.Item>\r\n                <Menu.Item key=\"9\" onClick={handleAppointmentCalender}>\r\n                  Randevu Takvimim\r\n              </Menu.Item>\r\n              </SubMenu>) : (<></>)}</>\r\n        )}\r\n        <SubMenu\r\n          key=\"subAccount\"\r\n          icon={<UserOutlined />}\r\n          title={userRole === \"User\" ? (<span>Kullanıcı Bilgilerim</span>) : (<>{userRole === \"Shop\" ? (<span>Salon Bilgilerim</span>) : (<span>Admin Profil</span>)}</>)}\r\n        >\r\n          {userRole === \"User\" ? (\r\n            <Menu.Item key=\"10\" onClick={handleUserProfile}>\r\n              Profilim\r\n            </Menu.Item>\r\n          ) : (\r\n            <>\r\n              {userRole === \"Shop\" ? (\r\n                <>\r\n                  <Menu.Item key=\"11\" onClick={handleShopProfile}>\r\n                    Salon Profilim\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"12\" onClick={handleShopServices}>\r\n                    Verdiğim Hizmetler\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"21\" onClick={handleServicePrices}>\r\n                    Fiyatlandırma\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"13\" onClick={handleShopCategories}>\r\n                    Kategorilerim\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"14\" onClick={handleShopImages}>\r\n                    Fotoğraflarım\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"15\" onClick={handleShopNotifications}>\r\n                    Bildirimlerim\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"16\" onClick={handlePersons}>\r\n                    Personellerim\r\n                  </Menu.Item>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Menu.Item key=\"20\" onClick={handleUserProfile}>\r\n                    Profilim\r\n                  </Menu.Item>\r\n                  <Menu.Item key=\"19\" onClick={handleComments}>\r\n                    Yorumlar\r\n                  </Menu.Item>\r\n                </>)\r\n              }\r\n            </>\r\n          )}\r\n\r\n          <Menu.Item key=\"17\" onClick={handleChangeMyPassword}>\r\n            Şifre Değiştir\r\n          </Menu.Item>\r\n        </SubMenu>\r\n        <Menu.Item icon={<LogoutOutlined />} key=\"18\" onClick={handleLogout}>\r\n          <span>Çıkış</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n};\r\nexport default SideNav;\r\n","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js",["182","183"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Menu, Layout, Badge, Dropdown, Typography } from \"antd\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport { SettingFilled, NotificationOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport API from \"../../api\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header } = Layout;\r\nconst { Text } = Typography;\r\n\r\n\r\n\r\nexport default function LayoutHeader() {\r\n  const {\r\n    setIsLoggedIn,\r\n    setToken,\r\n    username,\r\n    userRole,\r\n    setUsername,\r\n    currentShop,\r\n    setCurrentShop,\r\n  } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [notReadNotificationCount, setNotReadNotificationCount] = useState(0);\r\n  const token = localStorage.getItem(\"auth_token\");\r\n\r\n  const onClick = ({ key }) => {\r\n    if (location.pathname === \"/shopNotifications\") {\r\n      window.location.reload();\r\n    }\r\n    else {\r\n      history.push(\"/shopNotifications\");\r\n    }\r\n\r\n    API.put(`notifications/updateNotificationsAsRead`, {}, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setNotReadNotificationCount(0);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // const connect = new HubConnectionBuilder()\r\n    //   .withUrl(appointmentHub)\r\n    //   .withAutomaticReconnect()\r\n    //   .build();\r\n\r\n    // try {\r\n    //   connect.start();\r\n    // } catch (err) {\r\n    //   console.log(err);\r\n    // }\r\n\r\n    // connect.on(\"broadcastMessage\", (appointmentId, cancelText, shopId) => {\r\n    //   if (String(currentShop) === shopId) {\r\n    //     getNotReadShopNotificationsCount();\r\n    //     getShopNotifications();\r\n    //   }\r\n    // });\r\n\r\n    const getShopNotifications = async () => {\r\n      await API.get(`notifications/getTop5Notifications`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setNotifications(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Bildirimleri Getirme Esnasında Hata ile Karşılaşıldı\");\r\n        });\r\n    };\r\n\r\n    const getCurrentShop = async () => {\r\n      await API.get(`user/currentShop`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setCurrentShop(res.data);\r\n          console.log(currentShop);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    const getNotReadShopNotificationsCount = async () => {\r\n      await API.get(`notifications/getNotReadShopNotificationsCount`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setNotReadNotificationCount(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getShopNotifications();\r\n    getCurrentShop();\r\n    getNotReadShopNotificationsCount();\r\n  }, [currentShop, history, setCurrentShop, token, setNotifications, setNotReadNotificationCount\r\n  ]);\r\n\r\n  const menu = (\r\n    <Menu onClick={onClick}>\r\n      {notifications.map((notificaion, key) => {\r\n        return (\r\n          <Menu.Item key={key} icon={<NotificationOutlined />}>\r\n            <Text >{notificaion.shortNotificationText}</Text>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n      <Menu.Item key={\"allNotications\"}>\r\n        <Link style={{ color: \"#1890ff\" }} to=\"/shopNotifications\">Tüm Bildirimler</Link>\r\n      </Menu.Item>\r\n    </Menu >\r\n  );\r\n\r\n\r\n  const handleUserProfile = () => {\r\n    history.push(\"/userProfile\");\r\n  };\r\n  const handleShopProfile = () => {\r\n    history.push(\"/shopProfile\");\r\n  };\r\n  const handleSettings = () => {\r\n    history.push(\"/userSettings\");\r\n  };\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"auth_token\");\r\n    setIsLoggedIn(false);\r\n    setToken(\"\");\r\n    setUsername(\"\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header className=\"header\">\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          style={{ float: \"right\" }}\r\n          defaultSelectedKeys={[\"2\"]}\r\n        >\r\n          <Menu.Item key=\"menukey\">Hoşgeldiniz {username}</Menu.Item>\r\n          <Dropdown overlay={menu}>\r\n            <Badge count={notReadNotificationCount} dot onClick={e => e.preventDefault()}>\r\n              <NotificationOutlined style={{ color: \"white\" }} />\r\n            </Badge>\r\n          </Dropdown>\r\n          <SubMenu key=\"account\" icon={<SettingFilled />}>\r\n            {userRole === \"User\" ? (\r\n              <Menu.Item key=\"10\" onClick={handleUserProfile}>\r\n                Profilim\r\n              </Menu.Item>\r\n            ) : (\r\n              <Menu.Item key=\"11\" onClick={handleShopProfile}>\r\n                Mağaza Bilgilerim\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={handleSettings} key=\"setting:2\">\r\n              Ayarlar\r\n            </Menu.Item>\r\n            <Menu.Item onClick={handleLogout} key=\"setting:3\">\r\n              Çıkış\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\UserSettings.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\UserProfile.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\Home.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js",["184"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Layout, message, Row, Col, Image, Rate, List, Skeleton, Breadcrumb, Pagination, Anchor, Alert } from 'antd';\r\nimport MainHeader from \"./MainHeader\";\r\nimport MainFooter from \"./MainFooter\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport API from \"../../api\";\r\nimport { imageUrlDirectory } from \"../../constUrls\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\nimport { Form, Input, Button } from 'antd';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 2,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst { Link } = Anchor;\r\n\r\nconst { Content } = Layout;\r\n\r\nconst SaloonPage = () => {\r\n    let { saloonUrl, saloonId } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [servicesLoading, setServicesLoading] = useState(false);\r\n    const [imagesLoading, setImagesLoading] = useState(false);\r\n    const [personelsLoading, setPersonelsLoading] = useState(false);\r\n    const [commentLoading, setCommentLoading] = useState(false);\r\n    const [found, setFound] = useState(true);\r\n    // const history = useHistory();\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [saloonInformation, setSaloonInformation] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [modifiedCollection, setModifiedCollection] = useState([]);\r\n    const [saloonPersonels, setSaloonPersonels] = useState([]);\r\n    const [saloonServices, setSaloonServices] = useState([]);\r\n    const getCurrentAnchor = () => '#components-anchor-demo-static';\r\n    const [page, setPage] = useState(1);\r\n    const pageSize = 5;\r\n    const [totalCount, setTotalCount] = useState([]);\r\n\r\n    function onChange(pageNumber) {\r\n        setCommentLoading(true);\r\n        setPage(pageNumber);\r\n        API.get(`comments/getComments/${saloonId}/${pageSize}/${pageNumber}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setComments(res.data.item1.map((item, i) => item));\r\n                setTotalCount(res.data.item2);\r\n                setCommentLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.response.data);\r\n                setCommentLoading(false);\r\n            });\r\n    }\r\n\r\n    function showTotal(total) {\r\n        return `Toplam ${total} Yorum`;\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(values);\r\n        if (values.rate === undefined || values.rate === 0) {\r\n            message.error(\"Lütfen salonu puanlayın\");\r\n            return false;\r\n        }\r\n        var commentModel = {\r\n            Header: values.header,\r\n            Rate: values.rate,\r\n            Body: values.body,\r\n            SaloonId: saloonId\r\n        };\r\n\r\n        setCommentLoading(true);\r\n        await API.post(`comments/saveComment`, commentModel, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                message.success(\"Yorumunuz Kaydedildi. Onaylandıktan Sonra Yorumunuz Görünecektir!\");\r\n                setCommentLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 401 || error.response.status === 403) {\r\n                    message.error(\"Yorum Yapabilmeniz İçin Kullanıcı Girişi Yapmanız Gerekmektedir!\");\r\n                } else {\r\n                    message.error(error.response.data);\r\n                }\r\n                setCommentLoading(false);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const getComments = async () => {\r\n            setCommentLoading(true);\r\n            const pageNumber = 1;\r\n            setPage(pageNumber);\r\n            await API.get(`comments/getComments/${saloonId}/${pageSize}/${pageNumber}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setComments(res.data.item1.map((item, i) => item));\r\n                    setTotalCount(res.data.item2);\r\n                    setCommentLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.response.data);\r\n                    setCommentLoading(false);\r\n                });\r\n        }\r\n\r\n        // const getCommentsRateAverage = async () => {\r\n        //     await API.get(`comments/getCommentsRateAverage/${localSaloonId}`, {\r\n        //         headers: {\r\n        //             \"Content-Type\": \"application/json\",\r\n        //         },\r\n        //     })\r\n        //         .then((res) => {\r\n        //             setRate(res.data);\r\n        //         })\r\n        //         .catch((error) => {\r\n        //             message.error(error.response.data);\r\n        //         });\r\n        // }\r\n\r\n        const getSaloonDetail = async () => {\r\n            setLoading(true);\r\n            await API.get(`home/getSaloonProfile?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setFound(true);\r\n                    setSaloonInformation(res.data);\r\n                    setLogo(imageUrlDirectory + res.data.logoUrl);\r\n                    setLoading(false);\r\n                    return true;\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 404) {\r\n                        setFound(false);\r\n                    } else {\r\n                        message.error(error.response.data);\r\n                    }\r\n                    setLoading(false);\r\n                    return false;\r\n                });\r\n        };\r\n\r\n        const getSaloonServices = async () => {\r\n            setServicesLoading(true);\r\n            await API.get(`home/getSaloonServices?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setSaloonServices(res.data);\r\n                    setServicesLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response.data);\r\n                    setServicesLoading(false);\r\n                });\r\n        };\r\n\r\n        const getSaloonImages = async () => {\r\n            setImagesLoading(true);\r\n            await API.get(`home/getSaloonImages?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    if (res.data.length > 0) {\r\n                        let modifiedCollections = res.data.reduce((rows, key, index) => {\r\n                            return (index % 6 === 0 ? rows.push([key])\r\n                                : rows[rows.length - 1].push(key)) && rows;\r\n                        }, []);\r\n\r\n                        setModifiedCollection(modifiedCollections);\r\n                        setImagesLoading(false);\r\n                        // getCommentsRateAverage();\r\n\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response.data);\r\n                    setImagesLoading(false);\r\n                });\r\n        };\r\n\r\n        const getSaloonPersonels = async () => {\r\n            setPersonelsLoading(true);\r\n            await API.get(`home/getSaloonPersonels?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setSaloonPersonels(res.data);\r\n                    setPersonelsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response.data);\r\n                    setPersonelsLoading(false);\r\n                });\r\n        };\r\n\r\n        getSaloonDetail();\r\n        getSaloonServices();\r\n        getSaloonImages();\r\n        getComments();\r\n        getSaloonPersonels();\r\n\r\n    }, [saloonId]);\r\n\r\n    const convertToFullDate = (datetime) => {\r\n        var d = new Date(datetime);\r\n        var month = d.getUTCMonth() + 1; //months from 1-12\r\n        var day = d.getDate();\r\n        var year = d.getUTCFullYear();\r\n\r\n        var minutes = d.getMinutes();\r\n        var hour = d.getHours();\r\n\r\n        var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year} ${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n        return newdate;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n                <MainHeader></MainHeader>\r\n                <Content style={{ padding: '0 50px', margintop: 10, marginleft: '3%', marginRight: '2%' }}>\r\n\r\n                    {found === true ? (<div className=\"site-layout-content\">\r\n                        {loading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n\r\n                                <Row>\r\n                                    <Col xs={24} xl={6} style={{ paddingRight: \"10px\" }}>\r\n                                        <Image\r\n                                            alt=\"example\"\r\n                                            style={{ width: \"80%\", height: \"130px\" }}\r\n                                            // src={imageUrlDirectory + \"empty-img.png\"}\r\n                                            src={logo}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={24} xl={18} margintop={10} marginleft={10}>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">{saloonInformation.shopTitle}</Col>\r\n                                            <Col xs={24} xl={8}><Rate allowHalf defaultValue={saloonInformation.averagePoint} /></Col>\r\n                                        </Row>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">\r\n                                                <Breadcrumb>\r\n                                                    <Breadcrumb.Item>{saloonInformation.cityName}</Breadcrumb.Item>\r\n                                                    <Breadcrumb.Item>\r\n                                                        {saloonInformation.districtName}\r\n                                                    </Breadcrumb.Item>\r\n                                                    <Breadcrumb.Item>{saloonInformation.zoneName}</Breadcrumb.Item>\r\n                                                </Breadcrumb></Col>\r\n                                            <Col xs={24} xl={8}>\r\n                                                <Anchor affix={false} getCurrentAnchor={getCurrentAnchor}>\r\n                                                    <Link href=\"#comments\" title={saloonInformation.commentCount === 0 ? (<div>Henüz Yorum Yapılmamış</div>) : (<div>Yorum Sayısı: {saloonInformation.commentCount}</div>)} />\r\n                                                </Anchor></Col>\r\n                                        </Row>\r\n\r\n                                        <Row style={{ marginTop: 15 }}>\r\n                                            <Col className=\"ant-card-meta-description\">{saloonInformation.shopDescription}</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ marginTop: \"10px\" }}>\r\n                                    <Col xs={24} xl={18} marginleft={10}>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Telefon Numarmız:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.phoneNumber}</Col>\r\n                                            {/* <Col aria-colspan=\"3\" xs={24} xl={2} style={{ float: \"left\" }} className=\"ant-card-meta-title\"></Col> */}\r\n\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Mobil Telefon:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.mobilePhone} </Col>\r\n                                        </Row>\r\n                                        <Row xs={24} xl={24}>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Web Adresi:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}> <a href={saloonInformation.webSite}>{saloonInformation.webSite}</a> </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Email Adresimiz:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.email} </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Adresimiz:</b></Col>\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }}>{saloonInformation.address} </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        )}\r\n\r\n\r\n                        {imagesLoading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Fotoğraflarımız\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n\r\n                                {\r\n                                    modifiedCollection.map((row) =>\r\n                                        <Row gutter={16} style={{ marginTop: 10 }}>\r\n                                            {row.map(image => (\r\n                                                <Col span={4} key={\"col_img_\" + image.id}>\r\n                                                    <Image.PreviewGroup key={\"preview-image-\" + image.id}> <Image style={{ width: '100%', height: \"140px\" }}\r\n                                                        key={\"image-\" + image.id} src={imageUrlDirectory + image.imageUrl} /></Image.PreviewGroup>\r\n                                                </Col>))}\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                            </Card>\r\n                        )}\r\n\r\n                        {servicesLoading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Verdiğimiz Hizmetler\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n                                <List\r\n                                    className=\"demo-loadmore-list\"\r\n                                    loading={loading}\r\n                                    itemLayout=\"horizontal\"\r\n                                    // loadMore={loadMore}\r\n                                    dataSource={saloonServices}\r\n                                    renderItem={item => (\r\n                                        <List.Item key={\"ListItem_service_\" + item.services.id}>\r\n                                            <Skeleton key={\"skeleton_service_\" + item.services.id} avatar title={false} loading={loading} active>\r\n                                                <List.Item.Meta key={\"ListItem_Meta_Service_\" + item.services.id}\r\n                                                    description={item.services.serviceName}\r\n                                                />\r\n                                                <div>{item.price} TL</div>\r\n                                            </Skeleton>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Card>\r\n                        )}\r\n\r\n\r\n                        {personelsLoading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Personellerimiz\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n                                <List\r\n                                    className=\"demo-loadmore-list\"\r\n                                    loading={loading}\r\n                                    itemLayout=\"horizontal\"\r\n                                    // loadMore={loadMore}\r\n                                    dataSource={saloonPersonels}\r\n                                    renderItem={item => (\r\n                                        <List.Item key={\"listItem_Person_\" + item.id}>\r\n                                            <Skeleton key={\"skeleton_person_\" + item.id} avatar title={false} loading={loading} active>\r\n                                                <List.Item.Meta key={\"col_person_\" + item.id}\r\n                                                    description={item.personFullName}\r\n                                                />\r\n                                                <div>{item.isActive === true ? (<div>Aktif</div>) : (<div>Pasif</div>)}</div>\r\n                                            </Skeleton>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Card>\r\n                        )}\r\n\r\n                        <div id=\"comments\">\r\n                            {commentLoading ? (\r\n                                <div className=\"spinClass\">\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                </div>\r\n                            ) : (\r\n                                <Card title=\"Yorumlar\"\r\n                                    hoverable\r\n                                    bordered={true}\r\n                                    style={cardStyle}\r\n                                    headStyle={headStyle}>\r\n                                    {/* validateMessages={validateMessages} */}\r\n                                    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} >\r\n                                        <Form.Item\r\n                                            wrapperCol={{ ...layout.wrapperCol }}\r\n                                            name={'rate'}\r\n                                            label=\"Puan\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Puan Alanı Boş Geçilemez\"\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Rate allowHalf />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name={'header'}\r\n                                            label=\"Başlık\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Başlık Alanı Boş Geçilemez\"\r\n                                                },\r\n                                                { max: 150, message: \"En Fazla 150 Karakter Uzunluğunda Olabilir\" }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item name={'body'} label=\"Açıklama\" rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Açıklama Alanı Boş Geçilemez\"\r\n                                            },\r\n                                        ]}>\r\n                                            <Input.TextArea rows={3} showCount maxLength={500} />\r\n                                        </Form.Item>\r\n                                        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 2 }}>\r\n                                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                                Paylaş\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    <List\r\n                                        size=\"large\"\r\n                                        style={{ backgroundColor: \"white\" }}\r\n                                        footer={<Pagination defaultCurrent={page} defaultPageSize={pageSize} showTotal={showTotal} total={totalCount} onChange={onChange} />}\r\n                                        bordered\r\n                                        itemLayout=\"vertical\"\r\n                                        dataSource={comments}\r\n                                        renderItem={item => (\r\n\r\n                                            <List.Item key={\"comment_\" + item.id}\r\n                                                // actions={[\r\n                                                //     <Rate allowHalf value={item.rate}></Rate>\r\n                                                // ]}\r\n                                                extra={\r\n                                                    <Rate allowHalf value={item.rate}></Rate>\r\n                                                }\r\n                                            >\r\n                                                <List.Item.Meta\r\n                                                    key={\"comment_item_\" + item.id}\r\n                                                    title={item.userFullName}\r\n                                                    description={item.commentHeader}\r\n                                                />\r\n                                                {item.commentBody} <br />\r\n                                                {convertToFullDate(item.commentDate)}\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                </Card>\r\n                            )}\r\n                        </div>\r\n\r\n                    </div>) : (<Alert\r\n                        message=\"Hata!\"\r\n                        description=\"Üzgünüz. Aradığınız Salonu Bulamadık\"\r\n                        type=\"error\"\r\n                        closable\r\n                        showIcon\r\n                        style={{ marginTop: \"3%\", height: \"100px\" }}\r\n                    />)}\r\n\r\n\r\n\r\n                </Content>\r\n                <MainFooter />\r\n            </Layout >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SaloonPage;","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Admin\\Comments.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\constUrls.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js",["185","186","187"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { Table, Row, Col, Button, Typography, Input, Modal } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tag, Space, message, Skeleton, Select } from \"antd\";\r\nimport API from \"../../api\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport { serialize } from \"../../utils\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MyAppointments(props) {\r\n  const { Title } = Typography;\r\n  const history = useHistory();\r\n  const [myAppointments, setAppointmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const status = props.status;\r\n  const header = props.header;\r\n  const { token } = useContext(UserContext);\r\n  const {\r\n    setFirstBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    setLastBreadcrumb,\r\n  } = useContext(BreadCrumbContext);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [appointmentCancelReason, setAppointmentCancelReason] = useState(\"\");\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(0);\r\n  const [selectedShopId, setSelectedShopId] = useState(0);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const connect = new HubConnectionBuilder()\r\n  //     .withUrl(appointmentHub)\r\n  //     .withAutomaticReconnect()\r\n  //     .build();\r\n\r\n  //   try {\r\n  //     connect.start();\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }, []);\r\n\r\n  const showModel = (obj) => {\r\n    setIsModalVisible(true);\r\n    setSelectedAppointmentId(obj.id);\r\n    setSelectedShopId(obj.shopId);\r\n    setAppointmentCancelReason(\"\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    cancelAppointment(\r\n      selectedAppointmentId,\r\n      appointmentCancelReason,\r\n      selectedShopId\r\n    );\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const pageHeader = header;\r\n  const { Option } = Select;\r\n\r\n  const handleSortChange = useCallback((value) => {\r\n    setSortValue(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch({ pagination });\r\n    setFirstBreadcrumb(\"Anasayfa\");\r\n    setSecondBreadcrumb(\"Randevu Bilgilerim\");\r\n    setLastBreadcrumb(header);\r\n  }, [\r\n    searchText,\r\n    sortValue,\r\n    setFirstBreadcrumb,\r\n    setLastBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    header,\r\n    //pagination,\r\n  ]);\r\n\r\n  const fetch = async (params) => {\r\n    setLoading(true);\r\n    var filterAppointmentDto = serialize({\r\n      Current: params.pagination.current,\r\n      PageSize: params.pagination.pageSize,\r\n      Status: status,\r\n      SearchText: searchText,\r\n      SortValue: sortValue,\r\n    });\r\n    await API.get(`appointment/filter?${filterAppointmentDto}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAppointmentData(res.data.item1);\r\n        setLoading(false);\r\n        setPagination({\r\n          ...params.pagination,\r\n          total: res.data.item2,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 403) {\r\n          message.error(\"Bu Sayfayı Görmeye Yetkili Değilsiniz!\");\r\n          return;\r\n        }\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          message.error(\"Randevuları Getirme Esnasında Hata ile Karşılaşıldı!\");\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const cancelAppointment = async (appointmentId, cancelReasonText, shopId) => {\r\n    if (window.confirm(\"Randevuyu İptal Etmek İstediğinize Emin misiniz?\")) {\r\n      const cancelReason = {\r\n        CancelReason: cancelReasonText,\r\n      };\r\n      await API.put(\r\n        `appointment/cancelAppointment/${appointmentId}`,\r\n        cancelReason,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          message.success(res.data.response);\r\n          fetch({ pagination });\r\n          //sendMessage(appointmentId, cancelReasonText, shopId);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else if (error.response.status === 404) {\r\n            message.warning(error.response.data);\r\n          } else {\r\n            message.error(error.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const convertToFullDate = (datetime) => {\r\n    var d = new Date(datetime);\r\n    var month = d.getUTCMonth() + 1; //months from 1-12\r\n    var day = d.getDate();\r\n    var year = d.getUTCFullYear();\r\n\r\n    var minutes = d.getMinutes();\r\n    var hour = d.getHours();\r\n\r\n    var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year} ${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n    return newdate;\r\n  };\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    fetch({\r\n      pagination,\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    setPagination({\r\n      current: 1,\r\n      pageSize: 10,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      responsive: [\"xs\"]\r\n    },\r\n    {\r\n      title: \"Mağaza\",\r\n      dataIndex: \"shopTitle\",\r\n      key: \"shopTitle\",\r\n      render: (text) => <p>{text}</p>,\r\n      responsive: [\"sm\"]\r\n    },\r\n    {\r\n      title: \"Randevu Başlangıç Tarihi\",\r\n      dataIndex: \"appointmentBeginDate\",\r\n      key: \"appointmentBeginDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Randevu Bitiş Tarihi\",\r\n      dataIndex: \"appointmentEndDate\",\r\n      key: \"appointmentEndDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Durumu\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (\r\n        <div>\r\n          <Tag color={status === 1 ? \"green\" : \"red\"}>\r\n            {status === 1 ? \"Aktif\" : \"Pasif\"}\r\n          </Tag>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Randevu Aldığım Hizmetler\",\r\n      key: \"appointmentServices\",\r\n      dataIndex: \"appointmentServices\",\r\n      render: (appointmentServices) => (\r\n        <div>\r\n          {appointmentServices.map((service) => {\r\n            let color =\r\n              service.services.serviceName.length > 5 ? \"geekblue\" : \"green\";\r\n            if (service.services.serviceName === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={service.services.id}>\r\n                {service.services.serviceName.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n\r\n      render: (text, obj) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            disabled={obj.status === 0}\r\n            block\r\n            type={obj.status === 1 ? \"danger\" : \"primary\"}\r\n            onClick={() => showModel(obj)}\r\n          >\r\n            {obj.status === 1 ? \"İptal Et\" : \"Aktif Et\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  myAppointments.map((data) => {\r\n    data.shopTitle = data.shops.shopTitle;\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={18}>\r\n          <Title level={2}>{pageHeader}</Title>\r\n        </Col>\r\n        {/* <Col span={6}>\r\n          <Button onClick={handleClick} block type=\"primary\">\r\n            Yeni Randevu Talep Et\r\n          </Button>\r\n        </Col> */}\r\n      </Row>\r\n      <Row>\r\n        <Col span={10}>\r\n          <Input placeholder=\"Ara..\" onChange={handleChangeSearch} />\r\n        </Col>\r\n        <Col span={10}>\r\n          <Select\r\n            defaultValue=\"Seçiniz\"\r\n            onChange={handleSortChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Option key={\"ascByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Artan\r\n            </Option>\r\n            <Option key={\"descByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Azalan\r\n            </Option>\r\n            <Option key={\"ascByAppointmentDate\"}>\r\n              En Yakın Tarihli Randevuya Göre\r\n            </Option>\r\n            <Option key={\"descByAppointmentDate\"}>\r\n              En Uzak Tarihli Randevuya Göre\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={20}>\r\n          {loading ? (\r\n            <div>\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n            </div>\r\n\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              rowKey={(record) => record.id}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n              dataSource={myAppointments}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Randevu İptal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        okButtonProps={{\r\n          disabled: appointmentCancelReason === \"\" ? true : false,\r\n        }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Row>\r\n          <Col span={24}>Randevu İptal Nedeni</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={24}>\r\n            <TextArea\r\n              showCount\r\n              value={appointmentCancelReason}\r\n              onChange={(event) =>\r\n                setAppointmentCancelReason(event.target.value)\r\n              }\r\n              maxLength={500}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\MainFooter.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\assets\\styles\\styles.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\utils.js",[],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Common\\NewAppointment.js",["188","189","190","191","192","193","194","195","196","197","198","199"],"C:\\Users\\ASUS\\Desktop\\masa üstü yedek\\Appointment\\UI\\appointment-react-web-app\\src\\components\\Shop\\ShopServicesWithPrices.js",["200","201","202","203","204","205","206","207","208","209"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { message, Row, Button, Col, Spin, Card, Table, Input, InputNumber, Popconfirm, Form, Typography } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport API from \"../../api\";\r\nimport \"moment/locale/tr\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst ShopServicesWithPrices = () => {\r\n    const history = useHistory();\r\n    const [services, setServices] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [saveLoading, setSaveLoading] = useState(false);\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState([]);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const {\r\n        setFirstBreadcrumb,\r\n        setSecondBreadcrumb,\r\n        setLastBreadcrumb,\r\n    } = useContext(BreadCrumbContext);\r\n\r\n    useEffect(() => {\r\n        const getServices = async () => {\r\n            setLoading(true);\r\n            await API.get(`services/getServicesByShopId`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    debugger;\r\n                    setServices(res.data);\r\n                    setData(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 401) {\r\n                        history.push(\"/login\");\r\n                    } else if (error.response.status === 500) {\r\n                        message.error(\"Sunucu Kaynaklı Hata ile Karşılaşıldı.\");\r\n                    }\r\n                    else {\r\n                        message.error(error.response.data);\r\n                    }\r\n                    setLoading(false);\r\n                });\r\n        };\r\n\r\n        getServices();\r\n        setFirstBreadcrumb(\"Anasayfa\");\r\n        setSecondBreadcrumb(\"Ayarlar\");\r\n        setLastBreadcrumb(\"Fiyatlar\");\r\n    }, [\r\n        history,\r\n        setFirstBreadcrumb,\r\n        setLastBreadcrumb,\r\n        setSecondBreadcrumb,\r\n        token,\r\n    ]);\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            serviceName: '',\r\n            price: '',\r\n            minPrice: '',\r\n            maxPrice: '',\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n                const updateServicePriceModel = {\r\n                    Price: row.price,\r\n                    MaxPrice: row.maxPrice,\r\n                    MinPrice: row.minPrice,\r\n                    SaloonServiceId: item.shopServiceId\r\n\r\n                };\r\n                setLoading(true);\r\n                API.put(`services/updateServicePrice`, updateServicePriceModel, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => {\r\n                        message.success(\"Başarıyla Güncellediniz!\");\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.response !== undefined) {\r\n                            if (error.response.status == 400) {\r\n                                message.error(\r\n                                    \"Lütfen Fiyat Formatlarını Doğru Giriniz\"\r\n                                );\r\n                            }\r\n                            else {\r\n                                message.error(error.response.data);\r\n                            }\r\n\r\n                        } else {\r\n                            message.error(\r\n                                \"Güncelleme Esnasında Hata ile Karşılaşıldı!\"\r\n                            );\r\n                        }\r\n                        setLoading(false);\r\n                    });\r\n\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'shopServiceId',\r\n            key: 'shopServiceId',\r\n        },\r\n        {\r\n            title: 'Hizmet',\r\n            dataIndex: 'serviceName',\r\n            key: 'serviceName',\r\n        },\r\n        {\r\n            title: 'Fiyat',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.price - b.price,\r\n                multiple: 3,\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Min Fiyat',\r\n            dataIndex: 'minPrice',\r\n            key: 'minPrice',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.minPrice - b.minPrice,\r\n                multiple: 2,\r\n            },\r\n        },\r\n        {\r\n            title: 'Max Fiyat',\r\n            dataIndex: 'maxPrice',\r\n            key: 'maxPrice',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.maxPrice - b.maxPrice,\r\n                multiple: 1,\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'İşlemler',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            href=\"javascript:;\"\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Kaydet\r\n                  </a>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                            <a>İptal Et</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Düzenle\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={20} offset={2}>\r\n                    <Card\r\n                        title=\"Hizmet Fiyatları\"\r\n                        hoverable\r\n                        bordered={true}\r\n                        style={cardStyle}\r\n                        headStyle={headStyle}\r\n                    >\r\n                        <Form form={form} component={false}>\r\n                            <Table\r\n                                components={{\r\n                                    body: {\r\n                                        cell: EditableCell,\r\n                                    },\r\n                                }}\r\n                                bordered\r\n                                dataSource={data}\r\n                                columns={mergedColumns}\r\n                                rowClassName=\"editable-row\"\r\n                                pagination={{\r\n                                    onChange: cancel,\r\n                                }}\r\n                            />\r\n                        </Form>\r\n\r\n                        {/* <Spin spinning={loading} delay={500}>\r\n                            <Table dataSource={services} columns={columns} />\r\n                        </Spin> */}\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopServicesWithPrices;",{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":2,"column":25,"nodeType":"216","messageId":"217","endLine":2,"endColumn":37},{"ruleId":"214","severity":1,"message":"218","line":5,"column":10,"nodeType":"216","messageId":"217","endLine":5,"endColumn":30},{"ruleId":"214","severity":1,"message":"219","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":24},{"ruleId":"214","severity":1,"message":"220","line":24,"column":5,"nodeType":"216","messageId":"217","endLine":24,"endColumn":16},{"ruleId":"214","severity":1,"message":"219","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":24},{"ruleId":"214","severity":1,"message":"218","line":8,"column":10,"nodeType":"216","messageId":"217","endLine":8,"endColumn":30},{"ruleId":"214","severity":1,"message":"221","line":26,"column":11,"nodeType":"216","messageId":"217","endLine":26,"endColumn":20},{"ruleId":"214","severity":1,"message":"219","line":6,"column":10,"nodeType":"216","messageId":"217","endLine":6,"endColumn":24},{"ruleId":"214","severity":1,"message":"218","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":30},{"ruleId":"222","severity":1,"message":"223","line":83,"column":6,"nodeType":"224","endLine":91,"endColumn":4,"suggestions":"225"},{"ruleId":"214","severity":1,"message":"226","line":2,"column":50,"nodeType":"216","messageId":"217","endLine":2,"endColumn":54},{"ruleId":"214","severity":1,"message":"227","line":11,"column":7,"nodeType":"216","messageId":"217","endLine":11,"endColumn":13},{"ruleId":"214","severity":1,"message":"228","line":20,"column":9,"nodeType":"216","messageId":"217","endLine":20,"endColumn":13},{"ruleId":"214","severity":1,"message":"229","line":42,"column":11,"nodeType":"216","messageId":"217","endLine":42,"endColumn":27},{"ruleId":"214","severity":1,"message":"230","line":45,"column":12,"nodeType":"216","messageId":"217","endLine":45,"endColumn":34},{"ruleId":"214","severity":1,"message":"231","line":48,"column":11,"nodeType":"216","messageId":"217","endLine":48,"endColumn":20},{"ruleId":"232","severity":1,"message":"233","line":63,"column":64,"nodeType":"234","messageId":"235","endLine":63,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":69,"column":69,"nodeType":"234","messageId":"235","endLine":69,"endColumn":71},{"ruleId":"232","severity":1,"message":"233","line":112,"column":54,"nodeType":"234","messageId":"235","endLine":112,"endColumn":56},{"ruleId":"232","severity":1,"message":"233","line":112,"column":79,"nodeType":"234","messageId":"235","endLine":112,"endColumn":81},{"ruleId":"232","severity":1,"message":"233","line":210,"column":64,"nodeType":"234","messageId":"235","endLine":210,"endColumn":66},{"ruleId":"232","severity":1,"message":"233","line":216,"column":69,"nodeType":"234","messageId":"235","endLine":216,"endColumn":71},{"ruleId":"214","severity":1,"message":"236","line":2,"column":24,"nodeType":"216","messageId":"217","endLine":2,"endColumn":30},{"ruleId":"214","severity":1,"message":"237","line":2,"column":37,"nodeType":"216","messageId":"217","endLine":2,"endColumn":41},{"ruleId":"214","severity":1,"message":"238","line":46,"column":12,"nodeType":"216","messageId":"217","endLine":46,"endColumn":20},{"ruleId":"214","severity":1,"message":"239","line":47,"column":12,"nodeType":"216","messageId":"217","endLine":47,"endColumn":19},{"ruleId":"214","severity":1,"message":"240","line":48,"column":12,"nodeType":"216","messageId":"217","endLine":48,"endColumn":23},{"ruleId":"214","severity":1,"message":"241","line":48,"column":25,"nodeType":"216","messageId":"217","endLine":48,"endColumn":39},{"ruleId":"232","severity":1,"message":"233","line":146,"column":55,"nodeType":"234","messageId":"235","endLine":146,"endColumn":57},{"ruleId":"242","severity":1,"message":"243","line":223,"column":25,"nodeType":"244","endLine":229,"endColumn":26},{"ruleId":"245","severity":1,"message":"246","line":224,"column":34,"nodeType":"247","messageId":"248","endLine":224,"endColumn":48},{"ruleId":"242","severity":1,"message":"249","line":233,"column":29,"nodeType":"244","endLine":233,"endColumn":32},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"no-unused-vars","'notification' is defined but never used.","Identifier","unusedVar","'HubConnectionBuilder' is defined but never used.","'appointmentHub' is defined but never used.","'currentShop' is assigned a value but never used.","'saloonUrl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetch' and 'pagination'. Either include them or remove the dependency array.","ArrayExpression",["252"],"'Rate' is defined but never used.","'layout' is assigned a value but never used.","'Link' is assigned a value but never used.","'getCurrentAnchor' is assigned a value but never used.","'saveAppointmentLoading' is assigned a value but never used.","'showModal' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Button' is defined but never used.","'Spin' is defined but never used.","'services' is assigned a value but never used.","'loading' is assigned a value but never used.","'saveLoading' is assigned a value but never used.","'setSaveLoading' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},"Update the dependencies array to be: [searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]",{"range":"255","text":"256"},[2582,2728],"[searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]"]