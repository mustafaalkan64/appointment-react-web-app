[{"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js":"1","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js":"2","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js":"3","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js":"4","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js":"5","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js":"6","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js":"7","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js":"8","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js":"9","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js":"10","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js":"11","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js":"12","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js":"13","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js":"14","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js":"15","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js":"16","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js":"17","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js":"18","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js":"19","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js":"20","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js":"21","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js":"22","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js":"23","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js":"24","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js":"25","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js":"26","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js":"27","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js":"28","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js":"29","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js":"30","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js":"31","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js":"32","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js":"33","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js":"34","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\Home.js":"35","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js":"36","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js":"37","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js":"38","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js":"39"},{"size":612,"mtime":1619126873346,"results":"40","hashOfConfig":"41"},{"size":375,"mtime":1619126873346,"results":"42","hashOfConfig":"41"},{"size":645,"mtime":1623966025268,"results":"43","hashOfConfig":"41"},{"size":753,"mtime":1623964036390,"results":"44","hashOfConfig":"41"},{"size":683,"mtime":1619126873344,"results":"45","hashOfConfig":"41"},{"size":7898,"mtime":1624217018247,"results":"46","hashOfConfig":"41"},{"size":7007,"mtime":1624145753762,"results":"47","hashOfConfig":"41"},{"size":5765,"mtime":1623939452681,"results":"48","hashOfConfig":"41"},{"size":255,"mtime":1619126873343,"results":"49","hashOfConfig":"41"},{"size":286,"mtime":1619126873341,"results":"50","hashOfConfig":"41"},{"size":293,"mtime":1619126873340,"results":"51","hashOfConfig":"41"},{"size":12217,"mtime":1624145359903,"results":"52","hashOfConfig":"41"},{"size":295,"mtime":1619126873341,"results":"53","hashOfConfig":"41"},{"size":471,"mtime":1620883656479,"results":"54","hashOfConfig":"41"},{"size":11343,"mtime":1619191365991,"results":"55","hashOfConfig":"41"},{"size":98,"mtime":1619126873343,"results":"56","hashOfConfig":"41"},{"size":4491,"mtime":1621165753477,"results":"57","hashOfConfig":"41"},{"size":7340,"mtime":1620487208882,"results":"58","hashOfConfig":"41"},{"size":14950,"mtime":1624144906128,"results":"59","hashOfConfig":"41"},{"size":2921,"mtime":1624220246408,"results":"60","hashOfConfig":"41"},{"size":4317,"mtime":1619126873336,"results":"61","hashOfConfig":"41"},{"size":7293,"mtime":1624220457834,"results":"62","hashOfConfig":"41"},{"size":3757,"mtime":1624220923087,"results":"63","hashOfConfig":"41"},{"size":14682,"mtime":1624220800537,"results":"64","hashOfConfig":"41"},{"size":4230,"mtime":1624217539256,"results":"65","hashOfConfig":"41"},{"size":240,"mtime":1619126873328,"results":"66","hashOfConfig":"41"},{"size":5425,"mtime":1619126873327,"results":"67","hashOfConfig":"41"},{"size":210,"mtime":1620644938248,"results":"68","hashOfConfig":"41"},{"size":155,"mtime":1619126873314,"results":"69","hashOfConfig":"41"},{"size":10298,"mtime":1623997677703,"results":"70","hashOfConfig":"41"},{"size":762,"mtime":1624218412002,"results":"71","hashOfConfig":"41"},{"size":410,"mtime":1619126873347,"results":"72","hashOfConfig":"41"},{"size":3869,"mtime":1620675656686,"results":"73","hashOfConfig":"41"},{"size":4946,"mtime":1620812479895,"results":"74","hashOfConfig":"41"},{"size":18144,"mtime":1624222570807,"results":"75","hashOfConfig":"41"},{"size":4954,"mtime":1624145782504,"results":"76","hashOfConfig":"41"},{"size":5750,"mtime":1624145691928,"results":"77","hashOfConfig":"41"},{"size":1572,"mtime":1624205237947,"results":"78","hashOfConfig":"41"},{"size":23537,"mtime":1624203571410,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"arcl43",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js",[],["162","163"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js",["164"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlan.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js",["165"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js",["166"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { Table, Row, Col, Button, Typography, Input, Modal } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tag, Space, message, Skeleton, Select } from \"antd\";\r\nimport API from \"../../api\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport { serialize } from \"../../utils\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MyAppointments(props) {\r\n  const { Title } = Typography;\r\n  const history = useHistory();\r\n  const [myAppointments, setAppointmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const status = props.status;\r\n  const header = props.header;\r\n  const { token } = useContext(UserContext);\r\n  const {\r\n    setFirstBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    setLastBreadcrumb,\r\n  } = useContext(BreadCrumbContext);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [appointmentCancelReason, setAppointmentCancelReason] = useState(\"\");\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(0);\r\n  const [selectedShopId, setSelectedShopId] = useState(0);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const connect = new HubConnectionBuilder()\r\n      .withUrl(appointmentHub)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    try {\r\n      connect.start();\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }, []);\r\n\r\n  const showModel = (obj) => {\r\n    setIsModalVisible(true);\r\n    setSelectedAppointmentId(obj.id);\r\n    setSelectedShopId(obj.shopId);\r\n    setAppointmentCancelReason(\"\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    cancelAppointment(\r\n      selectedAppointmentId,\r\n      appointmentCancelReason,\r\n      selectedShopId\r\n    );\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const pageHeader = header;\r\n  const { Option } = Select;\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/form\");\r\n  };\r\n\r\n  const handleSortChange = useCallback((value) => {\r\n    setSortValue(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch({ pagination });\r\n    setFirstBreadcrumb(\"Anasayfa\");\r\n    setSecondBreadcrumb(\"Randevu Bilgilerim\");\r\n    setLastBreadcrumb(header);\r\n  }, [\r\n    searchText,\r\n    sortValue,\r\n    setFirstBreadcrumb,\r\n    setLastBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    header,\r\n    //pagination,\r\n  ]);\r\n\r\n  const fetch = async (params) => {\r\n    setLoading(true);\r\n    var filterAppointmentDto = serialize({\r\n      Current: params.pagination.current,\r\n      PageSize: params.pagination.pageSize,\r\n      Status: status,\r\n      SearchText: searchText,\r\n      SortValue: sortValue,\r\n    });\r\n    await API.get(`appointment/filter?${filterAppointmentDto}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAppointmentData(res.data.item1);\r\n        setLoading(false);\r\n        setPagination({\r\n          ...params.pagination,\r\n          total: res.data.item2,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 403) {\r\n          message.error(\"Bu Sayfayı Görmeye Yetkili Değilsiniz!\");\r\n          return;\r\n        }\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          message.error(\"Randevuları Getirme Esnasında Hata ile Karşılaşıldı!\");\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const cancelAppointment = async (appointmentId, cancelReasonText, shopId) => {\r\n    if (window.confirm(\"Randevuyu İptal Etmek İstediğinize Emin misiniz?\")) {\r\n      const cancelReason = {\r\n        CancelReason: cancelReasonText,\r\n      };\r\n      await API.put(\r\n        `appointment/cancelAppointment/${appointmentId}`,\r\n        cancelReason,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          message.success(res.data.response);\r\n          fetch({ pagination });\r\n          //sendMessage(appointmentId, cancelReasonText, shopId);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else if (error.response.status === 404) {\r\n            message.warning(error.response.data);\r\n          } else {\r\n            message.error(error.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const convertToFullDate = (datetime) => {\r\n    var d = new Date(datetime);\r\n    var month = d.getUTCMonth() + 1; //months from 1-12\r\n    var day = d.getDate();\r\n    var year = d.getUTCFullYear();\r\n\r\n    var minutes = d.getMinutes();\r\n    var hour = d.getHours();\r\n\r\n    var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year} ${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n    return newdate;\r\n  };\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    fetch({\r\n      pagination,\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    setPagination({\r\n      current: 1,\r\n      pageSize: 10,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Mağaza\",\r\n      dataIndex: \"shopTitle\",\r\n      key: \"shopTitle\",\r\n      render: (text) => <p>{text}</p>,\r\n    },\r\n    {\r\n      title: \"Randevu Başlangıç Tarihi\",\r\n      dataIndex: \"appointmentBeginDate\",\r\n      key: \"appointmentBeginDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Randevu Bitiş Tarihi\",\r\n      dataIndex: \"appointmentEndDate\",\r\n      key: \"appointmentEndDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Durumu\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (\r\n        <div>\r\n          <Tag color={status === 1 ? \"green\" : \"red\"}>\r\n            {status === 1 ? \"Aktif\" : \"Pasif\"}\r\n          </Tag>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Randevu Aldığım Hizmetler\",\r\n      key: \"appointmentServices\",\r\n      dataIndex: \"appointmentServices\",\r\n      render: (appointmentServices) => (\r\n        <div>\r\n          {appointmentServices.map((service) => {\r\n            let color =\r\n              service.services.serviceName.length > 5 ? \"geekblue\" : \"green\";\r\n            if (service.services.serviceName === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={service.services.id}>\r\n                {service.services.serviceName.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n\r\n      render: (text, obj) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            disabled={obj.status === 0}\r\n            block\r\n            type={obj.status === 1 ? \"danger\" : \"primary\"}\r\n            onClick={() => showModel(obj)}\r\n          >\r\n            {obj.status === 1 ? \"İptal Et\" : \"Aktif Et\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  myAppointments.map((data) => {\r\n    data.shopTitle = data.shops.shopTitle;\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={18}>\r\n          <Title level={2}>{pageHeader}</Title>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Button onClick={handleClick} block type=\"primary\">\r\n            Yeni Randevu Talep Et\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Input placeholder=\"Ara..\" onChange={handleChangeSearch} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Select\r\n            defaultValue=\"Seçiniz\"\r\n            onChange={handleSortChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Option key={\"ascByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Artan\r\n            </Option>\r\n            <Option key={\"descByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Azalan\r\n            </Option>\r\n            <Option key={\"ascByAppointmentDate\"}>\r\n              En Yakın Tarihli Randevuya Göre\r\n            </Option>\r\n            <Option key={\"descByAppointmentDate\"}>\r\n              En Uzak Tarihli Randevuya Göre\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={24}>\r\n          {loading ? (\r\n            <div>\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n            </div>\r\n\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              rowKey={(record) => record.id}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n              dataSource={myAppointments}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Randevu İptal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        okButtonProps={{\r\n          disabled: appointmentCancelReason === \"\" ? true : false,\r\n        }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>Randevu İptal Nedeni</Col>\r\n        </Row>\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>\r\n            <TextArea\r\n              showCount\r\n              value={appointmentCancelReason}\r\n              onChange={(event) =>\r\n                setAppointmentCancelReason(event.target.value)\r\n              }\r\n              maxLength={500}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\Home.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js",["167"],"import React, { useContext } from \"react\";\r\nimport { Button, Layout } from \"antd\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../assets/img/logo-t1.svg\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst { Header } = Layout;\r\n\r\n\r\nconst MainHeader = () => {\r\n    const history = useHistory();\r\n    const register = () => {\r\n        history.push(\"/signUp\")\r\n    }\r\n    const { isLoggedIn, token, username } = useContext(UserContext);\r\n    return (\r\n        <div>\r\n            <Header className=\"header\" style={{ backgroundColor: \"#1890ff\" }}>\r\n                <div className=\"logo\">\r\n                    <img src={logo} style={{\r\n                        float: \"left\",\r\n                        width: \"202px\",\r\n                        height: \"75px\"\r\n                    }} />\r\n                </div>\r\n                <div style={{\r\n                    float: \"right\"\r\n                }}>\r\n                    {isLoggedIn || token != null ? (<div>Hoşgeldiniz {username} <Link style={{ color: \"white\", marginRight: 10 }} to=\"/\">Yönetim Sayfası</Link> </div>) : (\r\n                        <div> <Link style={{ color: \"white\", marginRight: 10 }} to=\"/login\">Giriş Yap</Link>\r\n                            <Button style={{ color: \"#d46b08\", borderColor: \"#d46b08\" }} onClick={() => register()}>Üye Ol</Button>\r\n                        </div>\r\n                    )\r\n                    }\r\n                </div>\r\n            </Header>\r\n\r\n        </div >\r\n    );\r\n};\r\nexport default MainHeader;\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js",["168"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Layout, message, Row, Col, Image, Rate, List, Skeleton, Breadcrumb, Pagination, Anchor } from 'antd';\r\nimport MainHeader from \"./MainHeader\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport API from \"../../api\";\r\nimport { imageUrlDirectory } from \"../../constUrls\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\nimport { Form, Input, Button } from 'antd';\r\nconst layout = {\r\n    labelCol: {\r\n        span: 2,\r\n    },\r\n    wrapperCol: {\r\n        span: 16,\r\n    },\r\n};\r\n\r\nconst { Link } = Anchor;\r\n\r\nconst { Content, Footer } = Layout;\r\n// const validateMessages = {\r\n//     required: '${label} Alanı Zorunludur!',\r\n//     types: {\r\n//         email: '${label} is not a valid email!',\r\n//         number: '${label} is not a valid number!',\r\n//     },\r\n//     number: {\r\n//         range: '${label} must be between ${min} and ${max}',\r\n//     },\r\n// };\r\n\r\nconst SaloonPage = () => {\r\n    let { saloonUrl } = useParams();\r\n    const [loading, setLoading] = useState(false);\r\n    const [commentLoading, setCommentLoading] = useState(false);\r\n    // const history = useHistory();\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [saloonId, setSaloonId] = useState(null);\r\n    const [saloonInformation, setSaloonInformation] = useState({});\r\n    const [comments, setComments] = useState([]);\r\n    const [rate, setRate] = useState(null);\r\n    const [modifiedCollection, setModifiedCollection] = useState([]);\r\n    const getCurrentAnchor = () => '#components-anchor-demo-static';\r\n    const [page, setPage] = useState(1);\r\n    const pageSize = 5;\r\n    const [totalCount, setTotalCount] = useState([]);\r\n\r\n    function onChange(pageNumber) {\r\n        setCommentLoading(true);\r\n        setPage(pageNumber);\r\n        API.get(`comments/getComments/${saloonId}/${pageSize}/${pageNumber}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setComments(res.data.item1.map((item, i) => item));\r\n                setTotalCount(res.data.item2);\r\n                setCommentLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.response.data);\r\n                setCommentLoading(false);\r\n            });\r\n    }\r\n\r\n    function showTotal(total) {\r\n        return `Toplam ${total} Yorum`;\r\n    }\r\n\r\n    const onFinish = async (values) => {\r\n        console.log(values);\r\n        if (values.rate === undefined || values.rate === 0) {\r\n            message.error(\"Lütfen salonu puanlayın\");\r\n            return false;\r\n        }\r\n        var commentModel = {\r\n            Header: values.header,\r\n            Rate: values.rate,\r\n            Body: values.body,\r\n            SaloonId: saloonId\r\n        };\r\n\r\n        setCommentLoading(true);\r\n        await API.post(`comments/saveComment`, commentModel, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then((res) => {\r\n                message.success(\"Yorumunuz Kaydedildi. Onaylandıktan Sonra Yorumunuz Görünecektir!\");\r\n                setCommentLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 401) {\r\n                    message.error(\"Yorum Yapabilmeniz İçin Kullanıcı Girişi Yapmanız Gerekmektedir!\");\r\n                } else {\r\n                    message.error(error.response.data);\r\n                }\r\n                setCommentLoading(false);\r\n            });\r\n\r\n    };\r\n\r\n\r\n    useEffect(async () => {\r\n        let localSaloonId = 0;\r\n\r\n        const getComments = async () => {\r\n            setCommentLoading(true);\r\n            const pageNumber = 1;\r\n            setPage(pageNumber);\r\n            await API.get(`comments/getComments/${localSaloonId}/${pageSize}/${pageNumber}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setComments(res.data.item1.map((item, i) => item));\r\n                    setTotalCount(res.data.item2);\r\n                    setCommentLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.response.data);\r\n                    setCommentLoading(false);\r\n                });\r\n        }\r\n\r\n        const getCommentsRateAverage = async () => {\r\n            await API.get(`comments/getCommentsRateAverage/${localSaloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setRate(res.data);\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.response.data);\r\n                });\r\n        }\r\n\r\n        const getShopDetail = async () => {\r\n            setLoading(true);\r\n            const result = await API.get(`shop/getSaloonDetails?saloonTitle=${saloonUrl}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setSaloonId(res.data.id);\r\n                    localSaloonId = res.data.id; //local saloonId (let ile yukarıda tanımlanmış)\r\n                    setSaloonInformation(res.data);\r\n                    setLogo(imageUrlDirectory + res.data.logoUrl);\r\n                    if (res.data.shopImages.length > 0) {\r\n                        let modifiedCollections = res.data.shopImages.reduce((rows, key, index) => {\r\n                            return (index % 6 === 0 ? rows.push([key])\r\n                                : rows[rows.length - 1].push(key)) && rows;\r\n                        }, []);\r\n\r\n                        setModifiedCollection(modifiedCollections);\r\n                        getComments();\r\n                        getCommentsRateAverage();\r\n                    }\r\n                    setLoading(false);\r\n                    return true;\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.response.data);\r\n                    setLoading(false);\r\n                    return false;\r\n                });\r\n            console.log(result);\r\n        };\r\n\r\n\r\n        getShopDetail();\r\n\r\n    }, [saloonUrl, rate]);\r\n\r\n    const convertToFullDate = (datetime) => {\r\n        var d = new Date(datetime);\r\n        var month = d.getUTCMonth() + 1; //months from 1-12\r\n        var day = d.getDate();\r\n        var year = d.getUTCFullYear();\r\n\r\n        var minutes = d.getMinutes();\r\n        var hour = d.getHours();\r\n\r\n        var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year} ${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n        return newdate;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Layout>\r\n                <MainHeader></MainHeader>\r\n                <Content style={{ padding: '0 50px', margintop: 10, marginleft: '3%', marginRight: '2%' }}>\r\n\r\n                    <div className=\"site-layout-content\">\r\n                        {loading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n\r\n                                <Row>\r\n                                    <Col xs={24} xl={6} style={{ paddingRight: \"10px\" }}>\r\n                                        <Image\r\n                                            alt=\"example\"\r\n                                            style={{ width: \"80%\", height: \"130px\" }}\r\n                                            // src={imageUrlDirectory + \"empty-img.png\"}\r\n                                            src={logo}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs={24} xl={18} margintop={10} marginleft={10}>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">{saloonInformation.shopTitle}</Col>\r\n                                            <Col xs={24} xl={8}><Rate allowHalf defaultValue={rate} /></Col>\r\n                                        </Row>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">\r\n                                                <Breadcrumb>\r\n                                                    <Breadcrumb.Item>{saloonInformation.cityName}</Breadcrumb.Item>\r\n                                                    <Breadcrumb.Item>\r\n                                                        {saloonInformation.districtName}\r\n                                                    </Breadcrumb.Item>\r\n                                                    <Breadcrumb.Item>{saloonInformation.zoneName}</Breadcrumb.Item>\r\n                                                </Breadcrumb></Col>\r\n                                            <Col xs={24} xl={8}>\r\n                                                <Anchor affix={false} getCurrentAnchor={getCurrentAnchor}>\r\n                                                    <Link href=\"#comments\" title={totalCount === 0 ? (<div>Henüz Yorum Yapılmamış</div>) : (<div>Yorum Sayısı: {totalCount}</div>)} />\r\n                                                </Anchor></Col>\r\n                                        </Row>\r\n\r\n                                        <Row style={{ marginTop: 15 }}>\r\n                                            <Col className=\"ant-card-meta-description\">{saloonInformation.shopDescription}</Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row style={{ marginTop: \"10px\" }}>\r\n                                    <Col xs={24} xl={18} marginleft={10}>\r\n                                        <Row >\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Telefon Numarmız:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.phoneNumber}</Col>\r\n                                            {/* <Col aria-colspan=\"3\" xs={24} xl={2} style={{ float: \"left\" }} className=\"ant-card-meta-title\"></Col> */}\r\n\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Mobil Telefon:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.mobilePhone} </Col>\r\n                                        </Row>\r\n                                        <Row xs={24} xl={24}>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Web Adresi:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}> <a href={saloonInformation.webSite}>{saloonInformation.webSite}</a> </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Email Adresimiz:</b></Col>\r\n                                            <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.email} </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Adresimiz:</b></Col>\r\n                                            <Col xs={24} xl={16} style={{ float: \"left\" }}>{saloonInformation.address} </Col>\r\n                                        </Row>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card>\r\n                        )}\r\n\r\n\r\n                        {loading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                                <Skeleton.Image style={{ width: 200 }} active={true} />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Fotoğraflarımız\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n\r\n                                {\r\n                                    modifiedCollection.map((row) =>\r\n                                        <Row gutter={16} style={{ marginTop: 10 }}>\r\n                                            {row.map(image => (\r\n                                                <Col span={4} key={\"col_img_\" + image.id}>\r\n                                                    <Image.PreviewGroup key={\"preview-image-\" + image.id}> <Image style={{ width: '100%', height: \"140px\" }}\r\n                                                        key={\"image-\" + image.id} src={imageUrlDirectory + image.imageUrl} /></Image.PreviewGroup>\r\n                                                </Col>))}\r\n                                        </Row>\r\n                                    )\r\n                                }\r\n                            </Card>\r\n                        )}\r\n\r\n                        {loading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Verdiğimiz Hizmetler\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n                                <List\r\n                                    className=\"demo-loadmore-list\"\r\n                                    loading={loading}\r\n                                    itemLayout=\"horizontal\"\r\n                                    // loadMore={loadMore}\r\n                                    dataSource={saloonInformation.shopServices}\r\n                                    renderItem={item => (\r\n                                        <List.Item key={\"ListItem_service_\" + item.services.id}>\r\n                                            <Skeleton key={\"skeleton_service_\" + item.services.id} avatar title={false} loading={loading} active>\r\n                                                <List.Item.Meta key={\"ListItem_Meta_Service_\" + item.services.id}\r\n                                                    description={item.services.serviceName}\r\n                                                />\r\n                                                <div>{item.price} TL</div>\r\n                                            </Skeleton>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Card>\r\n                        )}\r\n\r\n\r\n                        {loading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Personellerimiz\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n                                <List\r\n                                    className=\"demo-loadmore-list\"\r\n                                    loading={loading}\r\n                                    itemLayout=\"horizontal\"\r\n                                    // loadMore={loadMore}\r\n                                    dataSource={saloonInformation.saloonPersonels}\r\n                                    renderItem={item => (\r\n                                        <List.Item key={\"listItem_Person_\" + item.id}>\r\n                                            <Skeleton key={\"skeleton_person_\" + item.id} avatar title={false} loading={loading} active>\r\n                                                <List.Item.Meta key={\"col_person_\" + item.id}\r\n                                                    description={item.personFullName}\r\n                                                />\r\n                                                <div>{item.isActive === true ? (<div>Aktif</div>) : (<div>Pasif</div>)}</div>\r\n                                            </Skeleton>\r\n                                        </List.Item>\r\n                                    )}\r\n                                />\r\n                            </Card>\r\n                        )}\r\n\r\n                        <div id=\"comments\">\r\n\r\n\r\n\r\n                            {commentLoading ? (\r\n                                <div className=\"spinClass\">\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                </div>\r\n                            ) : (\r\n                                <Card title=\"Yorumlar\"\r\n                                    hoverable\r\n                                    bordered={true}\r\n                                    style={cardStyle}\r\n                                    headStyle={headStyle}>\r\n                                    {/* validateMessages={validateMessages} */}\r\n                                    <Form {...layout} name=\"nest-messages\" onFinish={onFinish} >\r\n                                        <Form.Item\r\n                                            wrapperCol={{ ...layout.wrapperCol }}\r\n                                            name={'rate'}\r\n                                            label=\"Puan\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Puan Alanı Boş Geçilemez\"\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Rate allowHalf />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name={'header'}\r\n                                            label=\"Başlık\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: \"Başlık Alanı Boş Geçilemez\"\r\n                                                },\r\n                                                { max: 150, message: \"En Fazla 150 Karakter Uzunluğunda Olabilir\" }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n\r\n                                        <Form.Item name={'body'} label=\"Açıklama\" rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: \"Açıklama Alanı Boş Geçilemez\"\r\n                                            },\r\n                                        ]}>\r\n                                            <Input.TextArea rows={3} showCount maxLength={500} />\r\n                                        </Form.Item>\r\n                                        <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 2 }}>\r\n                                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                                Paylaş\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                    <List\r\n                                        size=\"large\"\r\n                                        style={{ backgroundColor: \"white\", width: \"100%\" }}\r\n                                        footer={<Pagination defaultCurrent={page} defaultPageSize={pageSize} showTotal={showTotal} total={totalCount} onChange={onChange} />}\r\n                                        bordered\r\n                                        dataSource={comments}\r\n                                        renderItem={item => (\r\n\r\n                                            <List.Item key={\"comment_\" + item.id} actions={[\r\n                                                <Rate allowHalf value={item.rate}></Rate>\r\n                                            ]}\r\n                                            >\r\n                                                <List.Item.Meta\r\n                                                    key={\"comment_item_\" + item.id}\r\n                                                    title={item.userFullName}\r\n                                                    description={item.commentHeader}\r\n                                                />\r\n                                                {item.commentBody} <br />\r\n                                                {convertToFullDate(item.commentDate)}\r\n                                            </List.Item>\r\n                                        )}\r\n                                    />\r\n                                </Card>\r\n                            )}\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n                </Content>\r\n                <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\r\n            </Layout >\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default SaloonPage;",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":4,"column":8,"nodeType":"175","messageId":"176","endLine":4,"endColumn":22},{"ruleId":"173","severity":1,"message":"177","line":18,"column":10,"nodeType":"175","messageId":"176","endLine":18,"endColumn":20},{"ruleId":"178","severity":1,"message":"179","line":87,"column":6,"nodeType":"180","endLine":95,"endColumn":4,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":21,"column":21,"nodeType":"184","endLine":25,"endColumn":26},{"ruleId":"178","severity":1,"message":"185","line":110,"column":15,"nodeType":"186","endLine":183,"endColumn":6},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'MyAppointments' is defined but never used.","Identifier","unusedVar","'loginStyle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetch' and 'pagination'. Either include them or remove the dependency array.","ArrayExpression",["189"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},"Update the dependencies array to be: [searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]",{"range":"192","text":"193"},[2616,2762],"[searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]"]