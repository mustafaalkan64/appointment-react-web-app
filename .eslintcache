[{"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js":"1","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js":"2","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js":"3","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js":"4","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js":"5","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js":"6","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js":"7","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js":"8","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js":"9","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js":"10","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js":"11","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js":"12","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js":"13","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js":"14","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js":"15","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js":"16","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js":"17","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js":"18","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js":"19","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js":"20","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js":"21","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js":"22","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js":"23","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js":"24","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js":"25","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js":"26","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js":"27","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js":"28","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js":"29","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js":"30","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js":"31","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js":"32","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js":"33","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\Home.js":"34","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js":"35","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js":"36","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js":"37","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js":"38","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainFooter.js":"39","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Admin\\Comments.js":"40","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServicesWithPrices.js":"41","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NewAppointment.js":"42","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\AppointmentResult.js":"43","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveAppointmentPlan.js":"44","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlanList.js":"45"},{"size":612,"mtime":1619126873346,"results":"46","hashOfConfig":"47"},{"size":375,"mtime":1619126873346,"results":"48","hashOfConfig":"47"},{"size":645,"mtime":1623966025268,"results":"49","hashOfConfig":"47"},{"size":753,"mtime":1623964036390,"results":"50","hashOfConfig":"47"},{"size":683,"mtime":1619126873344,"results":"51","hashOfConfig":"47"},{"size":8962,"mtime":1639216915292,"results":"52","hashOfConfig":"47"},{"size":8282,"mtime":1639301613968,"results":"53","hashOfConfig":"47"},{"size":5807,"mtime":1639301605435,"results":"54","hashOfConfig":"47"},{"size":255,"mtime":1619126873343,"results":"55","hashOfConfig":"47"},{"size":286,"mtime":1619126873341,"results":"56","hashOfConfig":"47"},{"size":293,"mtime":1619126873340,"results":"57","hashOfConfig":"47"},{"size":12259,"mtime":1639301830794,"results":"58","hashOfConfig":"47"},{"size":295,"mtime":1619126873341,"results":"59","hashOfConfig":"47"},{"size":471,"mtime":1620883656479,"results":"60","hashOfConfig":"47"},{"size":98,"mtime":1619126873343,"results":"61","hashOfConfig":"47"},{"size":4515,"mtime":1639301787166,"results":"62","hashOfConfig":"47"},{"size":7364,"mtime":1639301705603,"results":"63","hashOfConfig":"47"},{"size":14996,"mtime":1639301767465,"results":"64","hashOfConfig":"47"},{"size":2921,"mtime":1624220246408,"results":"65","hashOfConfig":"47"},{"size":4341,"mtime":1639301678834,"results":"66","hashOfConfig":"47"},{"size":7281,"mtime":1624791943707,"results":"67","hashOfConfig":"47"},{"size":3757,"mtime":1624220923087,"results":"68","hashOfConfig":"47"},{"size":14682,"mtime":1624220800537,"results":"69","hashOfConfig":"47"},{"size":4230,"mtime":1624217539256,"results":"70","hashOfConfig":"47"},{"size":240,"mtime":1619126873328,"results":"71","hashOfConfig":"47"},{"size":5433,"mtime":1639301468529,"results":"72","hashOfConfig":"47"},{"size":210,"mtime":1620644938248,"results":"73","hashOfConfig":"47"},{"size":187,"mtime":1658267977723,"results":"74","hashOfConfig":"47"},{"size":10124,"mtime":1638659627638,"results":"75","hashOfConfig":"47"},{"size":762,"mtime":1624218412002,"results":"76","hashOfConfig":"47"},{"size":410,"mtime":1619126873347,"results":"77","hashOfConfig":"47"},{"size":3885,"mtime":1639301721639,"results":"78","hashOfConfig":"47"},{"size":4954,"mtime":1638659502945,"results":"79","hashOfConfig":"47"},{"size":20690,"mtime":1658872476262,"results":"80","hashOfConfig":"47"},{"size":4970,"mtime":1639301637809,"results":"81","hashOfConfig":"47"},{"size":5766,"mtime":1639301657365,"results":"82","hashOfConfig":"47"},{"size":1701,"mtime":1624809662397,"results":"83","hashOfConfig":"47"},{"size":26136,"mtime":1639301592062,"results":"84","hashOfConfig":"47"},{"size":311,"mtime":1624790209893,"results":"85","hashOfConfig":"47"},{"size":7358,"mtime":1639301442867,"results":"86","hashOfConfig":"47"},{"size":9460,"mtime":1639301802914,"results":"87","hashOfConfig":"47"},{"size":21668,"mtime":1639301536441,"results":"88","hashOfConfig":"47"},{"size":4221,"mtime":1639264883324,"results":"89","hashOfConfig":"47"},{"size":12503,"mtime":1639265710656,"results":"90","hashOfConfig":"47"},{"size":4574,"mtime":1639264001698,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"arcl43",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"94"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"94"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"94"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"94"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"94"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\index.js",[],["188","189"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\App.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\UserContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\contexts\\BreadcrumbContext.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\UserLayout.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\SideNav.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Layout\\LayoutHeader.js",["190","191"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Menu, Layout, Badge, Dropdown, Typography } from \"antd\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport { SettingFilled, NotificationOutlined } from \"@ant-design/icons\";\r\nimport { useHistory } from \"react-router\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport API from \"../../api\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Header } = Layout;\r\nconst { Text } = Typography;\r\n\r\n\r\n\r\nexport default function LayoutHeader() {\r\n  const {\r\n    setIsLoggedIn,\r\n    setToken,\r\n    username,\r\n    userRole,\r\n    setUsername,\r\n    currentShop,\r\n    setCurrentShop,\r\n  } = useContext(UserContext);\r\n\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [notReadNotificationCount, setNotReadNotificationCount] = useState(0);\r\n  const token = localStorage.getItem(\"auth_token\");\r\n\r\n  const onClick = ({ key }) => {\r\n    if (location.pathname === \"/shopNotifications\") {\r\n      window.location.reload();\r\n    }\r\n    else {\r\n      history.push(\"/shopNotifications\");\r\n    }\r\n\r\n    API.put(`notifications/updateNotificationsAsRead`, {}, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setNotReadNotificationCount(0);\r\n\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data.message);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // const connect = new HubConnectionBuilder()\r\n    //   .withUrl(appointmentHub)\r\n    //   .withAutomaticReconnect()\r\n    //   .build();\r\n\r\n    // try {\r\n    //   connect.start();\r\n    // } catch (err) {\r\n    //   console.log(err);\r\n    // }\r\n\r\n    // connect.on(\"broadcastMessage\", (appointmentId, cancelText, shopId) => {\r\n    //   if (String(currentShop) === shopId) {\r\n    //     getNotReadShopNotificationsCount();\r\n    //     getShopNotifications();\r\n    //   }\r\n    // });\r\n\r\n    const getShopNotifications = async () => {\r\n      await API.get(`notifications/getTop5Notifications`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setNotifications(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"Bildirimleri Getirme Esnasında Hata ile Karşılaşıldı\");\r\n        });\r\n    };\r\n\r\n    const getCurrentShop = async () => {\r\n      await API.get(`user/currentShop`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setCurrentShop(res.data);\r\n          console.log(currentShop);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    const getNotReadShopNotificationsCount = async () => {\r\n      await API.get(`notifications/getNotReadShopNotificationsCount`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setNotReadNotificationCount(res.data);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n    getShopNotifications();\r\n    getCurrentShop();\r\n    getNotReadShopNotificationsCount();\r\n  }, [currentShop, history, setCurrentShop, token, setNotifications, setNotReadNotificationCount\r\n  ]);\r\n\r\n  const menu = (\r\n    <Menu onClick={onClick}>\r\n      {notifications.map((notificaion, key) => {\r\n        return (\r\n          <Menu.Item key={key} icon={<NotificationOutlined />}>\r\n            <Text >{notificaion.shortNotificationText}</Text>\r\n          </Menu.Item>\r\n        );\r\n      })}\r\n      <Menu.Item key={\"allNotications\"}>\r\n        <Link style={{ color: \"#1890ff\" }} to=\"/shopNotifications\">Tüm Bildirimler</Link>\r\n      </Menu.Item>\r\n    </Menu >\r\n  );\r\n\r\n\r\n  const handleUserProfile = () => {\r\n    history.push(\"/userProfile\");\r\n  };\r\n  const handleShopProfile = () => {\r\n    history.push(\"/shopProfile\");\r\n  };\r\n  const handleSettings = () => {\r\n    history.push(\"/userSettings\");\r\n  };\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"auth_token\");\r\n    setIsLoggedIn(false);\r\n    setToken(\"\");\r\n    setUsername(\"\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Header className=\"header\">\r\n        <div className=\"logo\" />\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          style={{ float: \"right\" }}\r\n          defaultSelectedKeys={[\"2\"]}\r\n        >\r\n          <Menu.Item key=\"menukey\">Hoşgeldiniz {username}</Menu.Item>\r\n          <Dropdown overlay={menu}>\r\n            <Badge count={notReadNotificationCount} dot onClick={e => e.preventDefault()}>\r\n              <NotificationOutlined style={{ color: \"white\" }} />\r\n            </Badge>\r\n          </Dropdown>\r\n          <SubMenu key=\"account\" icon={<SettingFilled />}>\r\n            {userRole === \"User\" ? (\r\n              <Menu.Item key=\"10\" onClick={handleUserProfile}>\r\n                Profilim\r\n              </Menu.Item>\r\n            ) : (\r\n              <Menu.Item key=\"11\" onClick={handleShopProfile}>\r\n                Mağaza Bilgilerim\r\n              </Menu.Item>\r\n            )}\r\n            <Menu.Item onClick={handleSettings} key=\"setting:2\">\r\n              Ayarlar\r\n            </Menu.Item>\r\n            <Menu.Item onClick={handleLogout} key=\"setting:3\">\r\n              Çıkış\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Header>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\myActiveAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyPreviousAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyCanceledAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyOncomingAppointments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserHome.js",["192"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\UserSettings.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServices.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopImages.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopProfile.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ForgotPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopCategories.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserRegister.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ResetPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\ShopRegister.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\LoginPages\\UserLogin.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NoMatch.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\ChangeMyPassword.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\constUrls.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\api.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\User\\MyAppointments.js",["193","194","195"],"import React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { Table, Row, Col, Button, Typography, Input, Modal } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tag, Space, message, Skeleton, Select } from \"antd\";\r\nimport API from \"../../api\";\r\nimport { appointmentHub } from \"../../constUrls\";\r\nimport { serialize } from \"../../utils\";\r\nimport UserContext from \"../../contexts/UserContext\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MyAppointments(props) {\r\n  const { Title } = Typography;\r\n  const history = useHistory();\r\n  const [myAppointments, setAppointmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const status = props.status;\r\n  const header = props.header;\r\n  const { token } = useContext(UserContext);\r\n  const {\r\n    setFirstBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    setLastBreadcrumb,\r\n  } = useContext(BreadCrumbContext);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [appointmentCancelReason, setAppointmentCancelReason] = useState(\"\");\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(0);\r\n  const [selectedShopId, setSelectedShopId] = useState(0);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   const connect = new HubConnectionBuilder()\r\n  //     .withUrl(appointmentHub)\r\n  //     .withAutomaticReconnect()\r\n  //     .build();\r\n\r\n  //   try {\r\n  //     connect.start();\r\n  //   } catch (err) {\r\n  //     console.log(err);\r\n  //   }\r\n  // }, []);\r\n\r\n  const showModel = (obj) => {\r\n    setIsModalVisible(true);\r\n    setSelectedAppointmentId(obj.id);\r\n    setSelectedShopId(obj.shopId);\r\n    setAppointmentCancelReason(\"\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    cancelAppointment(\r\n      selectedAppointmentId,\r\n      appointmentCancelReason,\r\n      selectedShopId\r\n    );\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const pageHeader = header;\r\n  const { Option } = Select;\r\n\r\n  const handleSortChange = useCallback((value) => {\r\n    setSortValue(value);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch({ pagination });\r\n    setFirstBreadcrumb(\"Anasayfa\");\r\n    setSecondBreadcrumb(\"Randevu Bilgilerim\");\r\n    setLastBreadcrumb(header);\r\n  }, [\r\n    searchText,\r\n    sortValue,\r\n    setFirstBreadcrumb,\r\n    setLastBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    header,\r\n    //pagination,\r\n  ]);\r\n\r\n  const fetch = async (params) => {\r\n    setLoading(true);\r\n    var filterAppointmentDto = serialize({\r\n      Current: params.pagination.current,\r\n      PageSize: params.pagination.pageSize,\r\n      Status: status,\r\n      SearchText: searchText,\r\n      SortValue: sortValue,\r\n    });\r\n    await API.get(`appointment/filter?${filterAppointmentDto}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAppointmentData(res.data.item1);\r\n        setLoading(false);\r\n        setPagination({\r\n          ...params.pagination,\r\n          total: res.data.item2,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 403) {\r\n          message.error(\"Bu Sayfayı Görmeye Yetkili Değilsiniz!\");\r\n          return;\r\n        }\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n        } else {\r\n          message.error(error.response.data.message);\r\n          return;\r\n        }\r\n      });\r\n  };\r\n\r\n  const cancelAppointment = async (appointmentId, cancelReasonText, shopId) => {\r\n    if (window.confirm(\"Randevuyu İptal Etmek İstediğinize Emin misiniz?\")) {\r\n      const cancelReason = {\r\n        CancelReason: cancelReasonText,\r\n      };\r\n      await API.put(\r\n        `appointment/cancelAppointment/${appointmentId}`,\r\n        cancelReason,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          message.success(res.data.response);\r\n          fetch({ pagination });\r\n          //sendMessage(appointmentId, cancelReasonText, shopId);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else {\r\n            message.error(error.response.data.message);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const convertToFullDate = (datetime) => {\r\n    var d = new Date(datetime);\r\n    var month = d.getUTCMonth() + 1; //months from 1-12\r\n    var day = d.getDate();\r\n    var year = d.getUTCFullYear();\r\n\r\n    var minutes = d.getMinutes();\r\n    var hour = d.getHours();\r\n\r\n    var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year} ${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n    return newdate;\r\n  };\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    fetch({\r\n      pagination,\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    setPagination({\r\n      current: 1,\r\n      pageSize: 10,\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      responsive: [\"xs\"]\r\n    },\r\n    {\r\n      title: \"Mağaza\",\r\n      dataIndex: \"shopTitle\",\r\n      key: \"shopTitle\",\r\n      render: (text) => <p>{text}</p>,\r\n      responsive: [\"sm\"]\r\n    },\r\n    {\r\n      title: \"Randevu Başlangıç Tarihi\",\r\n      dataIndex: \"appointmentBeginDate\",\r\n      key: \"appointmentBeginDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Randevu Bitiş Tarihi\",\r\n      dataIndex: \"appointmentEndDate\",\r\n      key: \"appointmentEndDate\",\r\n      render: (date) => <p>{convertToFullDate(date)}</p>,\r\n    },\r\n    {\r\n      title: \"Durumu\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (\r\n        <div>\r\n          <Tag color={status === 1 ? \"green\" : \"red\"}>\r\n            {status === 1 ? \"Aktif\" : \"Pasif\"}\r\n          </Tag>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Randevu Aldığım Hizmetler\",\r\n      key: \"appointmentServices\",\r\n      dataIndex: \"appointmentServices\",\r\n      render: (appointmentServices) => (\r\n        <div>\r\n          {appointmentServices.map((service) => {\r\n            let color =\r\n              service.services.serviceName.length > 5 ? \"geekblue\" : \"green\";\r\n            if (service.services.serviceName === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={service.services.id}>\r\n                {service.services.serviceName.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n\r\n      render: (text, obj) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            disabled={obj.status === 0}\r\n            block\r\n            type={obj.status === 1 ? \"danger\" : \"primary\"}\r\n            onClick={() => showModel(obj)}\r\n          >\r\n            {obj.status === 1 ? \"İptal Et\" : \"Aktif Et\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  myAppointments.map((data) => {\r\n    data.shopTitle = data.shops.shopTitle;\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={18}>\r\n          <Title level={2}>{pageHeader}</Title>\r\n        </Col>\r\n        {/* <Col span={6}>\r\n          <Button onClick={handleClick} block type=\"primary\">\r\n            Yeni Randevu Talep Et\r\n          </Button>\r\n        </Col> */}\r\n      </Row>\r\n      <Row>\r\n        <Col span={10}>\r\n          <Input placeholder=\"Ara..\" onChange={handleChangeSearch} />\r\n        </Col>\r\n        <Col span={10}>\r\n          <Select\r\n            defaultValue=\"Seçiniz\"\r\n            onChange={handleSortChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Option key={\"ascByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Artan\r\n            </Option>\r\n            <Option key={\"descByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Azalan\r\n            </Option>\r\n            <Option key={\"ascByAppointmentDate\"}>\r\n              En Yakın Tarihli Randevuya Göre\r\n            </Option>\r\n            <Option key={\"descByAppointmentDate\"}>\r\n              En Uzak Tarihli Randevuya Göre\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={20}>\r\n          {loading ? (\r\n            <div>\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n              <Skeleton active />\r\n            </div>\r\n\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              rowKey={(record) => record.id}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n              dataSource={myAppointments}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Randevu İptal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        okButtonProps={{\r\n          disabled: appointmentCancelReason === \"\" ? true : false,\r\n        }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Row>\r\n          <Col span={24}>Randevu İptal Nedeni</Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={24}>\r\n            <TextArea\r\n              showCount\r\n              value={appointmentCancelReason}\r\n              onChange={(event) =>\r\n                setAppointmentCancelReason(event.target.value)\r\n              }\r\n              maxLength={500}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\assets\\styles\\styles.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\utils.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopNotifications.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopAppointmentCalender.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\Home.js",["196"],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaloonPersonels.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveSaloonPerson.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainHeader.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\SaloonPage.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\MainFooter.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Admin\\Comments.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\ShopServicesWithPrices.js",["197","198","199"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { message, Row, Col, Card, Table, Spin, Input, InputNumber, Popconfirm, Form, Typography } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport API from \"../../api\";\r\nimport \"moment/locale/tr\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\n\r\nconst EditableCell = ({\r\n    editing,\r\n    dataIndex,\r\n    title,\r\n    inputType,\r\n    record,\r\n    index,\r\n    children,\r\n    ...restProps\r\n}) => {\r\n    const inputNode = inputType === 'number' ? <InputNumber /> : <Input />;\r\n    return (\r\n        <td {...restProps}>\r\n            {editing ? (\r\n                <Form.Item\r\n                    name={dataIndex}\r\n                    style={{\r\n                        margin: 0,\r\n                    }}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: `Please Input ${title}!`,\r\n                        },\r\n                    ]}\r\n                >\r\n                    {inputNode}\r\n                </Form.Item>\r\n            ) : (\r\n                children\r\n            )}\r\n        </td>\r\n    );\r\n};\r\n\r\nconst ShopServicesWithPrices = () => {\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    const [form] = Form.useForm();\r\n    const [data, setData] = useState([]);\r\n    const [editingKey, setEditingKey] = useState('');\r\n    const {\r\n        setFirstBreadcrumb,\r\n        setSecondBreadcrumb,\r\n        setLastBreadcrumb,\r\n    } = useContext(BreadCrumbContext);\r\n\r\n    useEffect(() => {\r\n        const getServices = async () => {\r\n            setLoading(true);\r\n            await API.get(`services/getServicesByShopId`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setData(res.data);\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 401) {\r\n                        history.push(\"/login\");\r\n                    }\r\n                    else {\r\n                        message.error(error.response.data.message);\r\n                    }\r\n                    setLoading(false);\r\n                });\r\n        };\r\n\r\n        getServices();\r\n        setFirstBreadcrumb(\"Anasayfa\");\r\n        setSecondBreadcrumb(\"Ayarlar\");\r\n        setLastBreadcrumb(\"Fiyatlar\");\r\n    }, [\r\n        history,\r\n        setFirstBreadcrumb,\r\n        setLastBreadcrumb,\r\n        setSecondBreadcrumb,\r\n        token,\r\n    ]);\r\n\r\n    const isEditing = (record) => record.key === editingKey;\r\n\r\n    const edit = (record) => {\r\n        form.setFieldsValue({\r\n            serviceName: '',\r\n            price: '',\r\n            minPrice: '',\r\n            maxPrice: '',\r\n            ...record,\r\n        });\r\n        setEditingKey(record.key);\r\n    };\r\n\r\n    const cancel = () => {\r\n        setEditingKey('');\r\n    };\r\n\r\n    const save = async (key) => {\r\n        try {\r\n            const row = await form.validateFields();\r\n            const newData = [...data];\r\n            const index = newData.findIndex((item) => key === item.key);\r\n            if (index > -1) {\r\n                const item = newData[index];\r\n                newData.splice(index, 1, { ...item, ...row });\r\n                const updateServicePriceModel = {\r\n                    Price: row.price,\r\n                    MaxPrice: row.maxPrice,\r\n                    MinPrice: row.minPrice,\r\n                    SaloonServiceId: item.shopServiceId\r\n\r\n                };\r\n                setLoading(true);\r\n                API.put(`services/updateServicePrice`, updateServicePriceModel, {\r\n                    headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: `Bearer ${token}`,\r\n                    },\r\n                })\r\n                    .then((res) => {\r\n                        message.success(\"Başarıyla Güncellediniz!\");\r\n                        setData(newData);\r\n                        setEditingKey('');\r\n                        setLoading(false);\r\n                    })\r\n                    .catch((error) => {\r\n                        if (error.response !== undefined) {\r\n                            if (error.response.status === 400) {\r\n                                message.error(\r\n                                    \"Lütfen Fiyat Formatlarını Doğru Giriniz\"\r\n                                );\r\n                            }\r\n                            else {\r\n                                message.error(error.response.data.message);\r\n                            }\r\n\r\n                        } else {\r\n                            message.error(\r\n                                \"Güncelleme Esnasında Hata ile Karşılaşıldı!\"\r\n                            );\r\n                        }\r\n                        setLoading(false);\r\n                    });\r\n\r\n            } else {\r\n                newData.push(row);\r\n                setData(newData);\r\n                setEditingKey('');\r\n            }\r\n        } catch (errInfo) {\r\n            console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Id',\r\n            dataIndex: 'shopServiceId',\r\n            key: 'shopServiceId',\r\n        },\r\n        {\r\n            title: 'Hizmet',\r\n            dataIndex: 'serviceName',\r\n            key: 'serviceName',\r\n        },\r\n        {\r\n            title: 'Fiyat',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.price - b.price,\r\n                multiple: 3,\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'Min Fiyat',\r\n            dataIndex: 'minPrice',\r\n            key: 'minPrice',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.minPrice - b.minPrice,\r\n                multiple: 2,\r\n            },\r\n        },\r\n        {\r\n            title: 'Max Fiyat',\r\n            dataIndex: 'maxPrice',\r\n            key: 'maxPrice',\r\n            editable: true,\r\n            sorter: {\r\n                compare: (a, b) => a.maxPrice - b.maxPrice,\r\n                multiple: 1,\r\n            },\r\n\r\n        },\r\n        {\r\n            title: 'İşlemler',\r\n            dataIndex: 'operation',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return editable ? (\r\n                    <span>\r\n                        <a\r\n                            href=\"javascript:;\"\r\n                            onClick={() => save(record.key)}\r\n                            style={{\r\n                                marginRight: 8,\r\n                            }}\r\n                        >\r\n                            Kaydet\r\n                  </a>\r\n                        <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n                            <a>İptal Et</a>\r\n                        </Popconfirm>\r\n                    </span>\r\n                ) : (\r\n                    <Typography.Link disabled={editingKey !== ''} onClick={() => edit(record)}>\r\n                        Düzenle\r\n                    </Typography.Link>\r\n                );\r\n            },\r\n        },\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n            return col;\r\n        }\r\n\r\n        return {\r\n            ...col,\r\n            onCell: (record) => ({\r\n                record,\r\n                inputType: col.dataIndex === 'age' ? 'number' : 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: isEditing(record),\r\n            }),\r\n        };\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col span={20} offset={2}>\r\n                    <Card\r\n                        title=\"Hizmet Fiyatları\"\r\n                        hoverable\r\n                        bordered={true}\r\n                        style={cardStyle}\r\n                        headStyle={headStyle}\r\n                    >\r\n                        <Form form={form} component={false}>\r\n                            <Spin spinning={loading} delay={500}>\r\n                                <Table\r\n                                    components={{\r\n                                        body: {\r\n                                            cell: EditableCell,\r\n                                        },\r\n                                    }}\r\n                                    bordered\r\n                                    dataSource={data}\r\n                                    columns={mergedColumns}\r\n                                    rowClassName=\"editable-row\"\r\n                                    pagination={{\r\n                                        onChange: cancel,\r\n                                    }}\r\n                                />\r\n                            </Spin>\r\n                        </Form>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShopServicesWithPrices;","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\NewAppointment.js",["200"],"import React, { useEffect, useState } from 'react';\r\nimport { Card, Layout, message, Row, Col, Image, Spin, Modal, Skeleton, Breadcrumb, Select, Alert, Button } from 'antd';\r\nimport MainHeader from \"./MainHeader\";\r\nimport MainFooter from \"./MainFooter\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport API from \"../../api\";\r\nimport { useHistory } from \"react-router\";\r\nimport { imageUrlDirectory } from \"../../constUrls\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\nconst { Content } = Layout;\r\n\r\nconst NewAppointment = () => {\r\n    let { saloonId } = useParams();\r\n    const history = useHistory();\r\n    const [loading, setLoading] = useState(false);\r\n    const [servicesLoading, setServicesLoading] = useState(false);\r\n    const [personelsLoading, setPersonelsLoading] = useState(false);\r\n    const [found, setFound] = useState(true);\r\n    const { Option } = Select;\r\n    // const history = useHistory();\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    const [logo, setLogo] = useState(\"\");\r\n    const [saloonInformation, setSaloonInformation] = useState({});\r\n    const [saloonPersonels, setSaloonPersonels] = useState([]);\r\n    const [saloonServices, setSaloonServices] = useState([]);\r\n    const [appointmentCalenderList, setAppointmentCalenderList] = useState([]);\r\n    const [selectedServices, setSelectedServices] = useState([]);\r\n    const [selectedSaloonPersonel, setSelectedSaloonPersonel] = useState(null);\r\n    const [beginOfAppointmentDate, setBeginOfAppointmentDate] = useState(null);\r\n    const [endOfAppointmentDate, setEndOfAppointmentDate] = useState(null);\r\n    const [isModalVisible, setIsModalVisible] = useState(false);\r\n    const [modalContent, setModalContent] = useState(\"\");\r\n    const [saveAppointmentLoading, setSaveAppointmentLoading] = useState(false);\r\n    const [appointmentCalenderIsLoading, setAppointmentCalenderIsLoading] = useState(false);\r\n    const [week, setWeek] = useState(0);\r\n\r\n    const handleOk = async () => {\r\n        var saveAppointmentModel = {\r\n            BeginDate: beginOfAppointmentDate,\r\n            EndDate: endOfAppointmentDate,\r\n            ServicesId: selectedServices,\r\n            SaloonPersonId: selectedSaloonPersonel,\r\n            SaloonId: saloonId\r\n        };\r\n\r\n        if (selectedServices === null || selectedServices.length === 0) {\r\n            setIsModalVisible(false);\r\n            message.error(\"En Az Bir Hizmet Seçmelisiniz\");\r\n            return;\r\n        }\r\n\r\n        if (selectedSaloonPersonel === null || selectedSaloonPersonel === undefined) {\r\n            setIsModalVisible(false);\r\n            message.error(\"En Az Bir Personel Seçmelisiniz\");\r\n            return;\r\n        }\r\n\r\n        setIsModalVisible(false);\r\n        setSaveAppointmentLoading(true);\r\n        await API.post(`appointment/saveAppointment`, saveAppointmentModel, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${token}`,\r\n            },\r\n        })\r\n            .then(async (res) => {\r\n                message.success(\"Randevunuz Kaydedildi!\");\r\n                localStorage.setItem('appointmentResult', JSON.stringify(saveAppointmentModel));\r\n                history.push(\"/appointmentResult/\" + res.data.result);\r\n                await getWeeklyAppointments(week);\r\n                setSaveAppointmentLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                if (error.response.status === 401 || error.response.status === 403) {\r\n                    message.error(\"Randevu Almak İçin Kullanıcı Girişi Yapmanız Gerekmektedir!\");\r\n                } else {\r\n                    message.error(error.response.data.message);\r\n                }\r\n                setSaveAppointmentLoading(false);\r\n            });\r\n\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        setIsModalVisible(false);\r\n    };\r\n\r\n    const getWeeklyAppointments = async (week) => {\r\n        setAppointmentCalenderIsLoading(true);\r\n        await API.get(`appointment/getCurrentWeekAppointments?saloonId=${saloonId}&week=${week}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n        })\r\n            .then((res) => {\r\n                setAppointmentCalenderList(res.data);\r\n                setAppointmentCalenderIsLoading(false);\r\n                return true;\r\n            })\r\n            .catch((error) => {\r\n                message.error(error.response.data.message);\r\n                setAppointmentCalenderIsLoading(false);\r\n                return false;\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const getSaloonDetail = async () => {\r\n            setLoading(true);\r\n            await API.get(`home/getSaloonProfile?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setFound(true);\r\n                    if (res.data === null || res.data === undefined || res.data === '')\r\n                        setFound(false);\r\n                    setSaloonInformation(res.data);\r\n                    setLogo(imageUrlDirectory + res.data.logoUrl);\r\n                    setLoading(false);\r\n                    return true;\r\n                })\r\n                .catch((error) => {\r\n                    if (error.response.status === 404) {\r\n                        setFound(false);\r\n                    } else {\r\n                        message.error(error.response.data.message);\r\n                    }\r\n                    setLoading(false);\r\n                    return false;\r\n                });\r\n        };\r\n\r\n        const getCurrentWeekAppointments = async () => {\r\n            await getWeeklyAppointments(0);\r\n        };\r\n\r\n        const getSaloonServices = async () => {\r\n            setServicesLoading(true);\r\n            await API.get(`home/getSaloonServices?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setSaloonServices(res.data);\r\n                    setServicesLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.response.data.message);\r\n                    setServicesLoading(false);\r\n                });\r\n        };\r\n\r\n        const getSaloonPersonels = async () => {\r\n            setPersonelsLoading(true);\r\n            await API.get(`home/getSaloonPersonels?saloonId=${saloonId}`, {\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    setSaloonPersonels(res.data);\r\n                    setPersonelsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    message.error(error.response.data.message);\r\n                    setPersonelsLoading(false);\r\n                });\r\n        };\r\n\r\n        getSaloonDetail();\r\n        getSaloonServices();\r\n        getSaloonPersonels();\r\n        getCurrentWeekAppointments();\r\n        getWeeklyAppointments(0);\r\n\r\n    }, [saloonId]);\r\n\r\n    const convertToFullDate = (datetime) => {\r\n        var d = new Date(datetime);\r\n        var month = d.getUTCMonth() + 1; //months from 1-12\r\n        var day = d.getDate();\r\n        var year = d.getUTCFullYear();\r\n\r\n        var newdate = `${(\"0\" + day).slice(-2)}.${(\"0\" + month).slice(-2)}.${year}`;\r\n        return newdate;\r\n    };\r\n\r\n    const getHourAndMinutes = (datetime) => {\r\n        var d = new Date(datetime);\r\n        var minutes = d.getMinutes();\r\n        var hour = d.getHours();\r\n\r\n        var newdate = `${(\"0\" + hour).slice(-2)}:${(\"0\" + minutes).slice(-2)}`;\r\n        return newdate;\r\n    };\r\n\r\n    const showAppointmentModal = (beginDate, endDate, dayOfWeek) => {\r\n\r\n        if (selectedServices === null || selectedServices.length === 0) {\r\n            setIsModalVisible(false);\r\n            message.error(\"En Az Bir Hizmet Seçmelisiniz\");\r\n            return;\r\n        }\r\n\r\n        if (selectedSaloonPersonel === null || selectedSaloonPersonel === undefined) {\r\n            setIsModalVisible(false);\r\n            message.error(\"En Az Bir Personel Seçmelisiniz\");\r\n            return;\r\n        }\r\n\r\n        setBeginOfAppointmentDate(beginDate);\r\n        setEndOfAppointmentDate(endDate);\r\n        setIsModalVisible(true);\r\n        setModalContent(`${convertToFullDate(beginDate)} ${dayOfWeek} Günü ${getHourAndMinutes(beginDate)} ile  ${getHourAndMinutes(endDate)} Saatleri Arasında Randevu Almak İstediğinize Emin misiniz ?`);\r\n    }\r\n\r\n    const getPreviousWeekCalender = () => {\r\n        let selectedWeek = week - 1;\r\n        setWeek(selectedWeek);\r\n        getWeeklyAppointments(selectedWeek);\r\n    }\r\n\r\n    const getNextWeekCalender = () => {\r\n        let selectedWeek = week + 1;\r\n        setWeek(selectedWeek);\r\n        getWeeklyAppointments(selectedWeek);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Spin spinning={saveAppointmentLoading}>\r\n                <Layout style={{ minHeight: '100vh' }}>\r\n                    <MainHeader></MainHeader>\r\n                    <Content style={{ padding: '0 50px', margintop: 10, marginleft: '3%', marginRight: '2%' }}>\r\n\r\n                        {found === true ? (<div className=\"site-layout-content\">\r\n                            {loading ? (\r\n                                <div className=\"spinClass\">\r\n                                    <Skeleton active />\r\n                                </div>\r\n                            ) : (\r\n                                <Card\r\n                                    hoverable\r\n                                    bordered={true}\r\n                                    style={cardStyle}\r\n                                    headStyle={headStyle}>\r\n\r\n                                    <Row>\r\n                                        <Col xs={24} xl={6} style={{ paddingRight: \"10px\" }}>\r\n                                            <Image\r\n                                                alt=\"example\"\r\n                                                style={{ width: \"80%\", height: \"130px\" }}\r\n                                                // src={imageUrlDirectory + \"empty-img.png\"}\r\n                                                src={logo}\r\n                                            />\r\n                                        </Col>\r\n                                        <Col xs={24} xl={18} margintop={10} marginleft={10}>\r\n                                            <Row >\r\n                                                <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">{saloonInformation.shopTitle}</Col>\r\n                                                <Col xs={24} xl={8}></Col>\r\n                                            </Row>\r\n                                            <Row >\r\n                                                <Col xs={24} xl={16} style={{ float: \"left\" }} className=\"ant-card-meta-title\">\r\n                                                    <Breadcrumb>\r\n                                                        <Breadcrumb.Item>{saloonInformation.cityName}</Breadcrumb.Item>\r\n                                                        <Breadcrumb.Item>\r\n                                                            {saloonInformation.districtName}\r\n                                                        </Breadcrumb.Item>\r\n                                                        <Breadcrumb.Item>{saloonInformation.zoneName}</Breadcrumb.Item>\r\n                                                    </Breadcrumb></Col>\r\n                                                <Col xs={24} xl={8}>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                            <Row style={{ marginTop: 15 }}>\r\n                                                <Col className=\"ant-card-meta-description\">{saloonInformation.shopDescription}</Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row style={{ marginTop: \"10px\" }}>\r\n                                        <Col xs={24} xl={18} marginleft={10}>\r\n                                            <Row >\r\n                                                <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Telefon Numarmız:</b></Col>\r\n                                                <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.phoneNumber}</Col>\r\n                                                {/* <Col aria-colspan=\"3\" xs={24} xl={2} style={{ float: \"left\" }} className=\"ant-card-meta-title\"></Col> */}\r\n\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Mobil Telefon:</b></Col>\r\n                                                <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.mobilePhone} </Col>\r\n                                            </Row>\r\n                                            <Row xs={24} xl={24}>\r\n                                                <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Web Adresi:</b></Col>\r\n                                                <Col xs={24} xl={8} style={{ float: \"left\" }}> <a href={saloonInformation.webSite}>{saloonInformation.webSite}</a> </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Email Adresimiz:</b></Col>\r\n                                                <Col xs={24} xl={8} style={{ float: \"left\" }}>{saloonInformation.email} </Col>\r\n                                            </Row>\r\n                                            <Row>\r\n                                                <Col xs={24} xl={4} style={{ float: \"left\" }}><b>Adresimiz:</b></Col>\r\n                                                <Col xs={24} xl={16} style={{ float: \"left\" }}>{saloonInformation.address} </Col>\r\n                                            </Row>\r\n\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            )}\r\n\r\n\r\n                            {servicesLoading ? (\r\n                                <div className=\"spinClass\">\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                </div>\r\n                            ) : (\r\n                                <Card\r\n                                    title=\"Hizmet Seçimi\"\r\n                                    hoverable\r\n                                    bordered={true}\r\n                                    style={cardStyle}\r\n                                    headStyle={headStyle}>\r\n                                    <Row>\r\n                                        <Col span={24}><Select\r\n                                            placeholder=\"Aldığınız Hizmeti Seçiniz\"\r\n                                            defaultValue={[]}\r\n                                            onChange={(key, items) => {\r\n                                                setSelectedServices(items.map(x => x.key));\r\n                                            }}\r\n                                            mode=\"multiple\"\r\n                                            style={{ width: \"100%\" }}\r\n                                        >\r\n                                            {saloonServices.map((element) => (\r\n                                                <Option key={element.services.id} value={element.services.serviceName}>\r\n                                                    {element.services.serviceName}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select></Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            )}\r\n\r\n\r\n                            {personelsLoading ? (\r\n                                <div className=\"spinClass\">\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                    <Skeleton active />\r\n                                </div>\r\n                            ) : (\r\n                                <Card title=\"Personel Seçimi\"\r\n                                    hoverable\r\n                                    bordered={true}\r\n                                    style={cardStyle}\r\n                                    headStyle={headStyle}>\r\n                                    <Row>\r\n                                        <Col span={24}><Select\r\n                                            onChange={(value, item) => {\r\n                                                setSelectedSaloonPersonel(item.key);\r\n                                            }}\r\n                                            placeholder=\"Personel Seçiniz\"\r\n                                            defaultValue={[]}\r\n                                            style={{ width: \"100%\" }}\r\n                                        >\r\n                                            <Option key={0} value={0}>Farketmez</Option>\r\n                                            {saloonPersonels.map((element, index) => (\r\n                                                <Option key={element.id} value={element.personFullName}>\r\n                                                    {element.personFullName}\r\n                                                </Option>\r\n                                            ))}\r\n                                        </Select></Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            )}\r\n\r\n                        </div>) : (<Alert\r\n                            message=\"Hata!\"\r\n                            description=\"Üzgünüz. Aradığınız Salonu Bulamadık\"\r\n                            type=\"error\"\r\n                            closable\r\n                            showIcon\r\n                            style={{ marginTop: \"3%\", height: \"100px\" }}\r\n                        />)}\r\n\r\n\r\n                        {appointmentCalenderIsLoading ? (\r\n                            <div className=\"spinClass\">\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                                <Skeleton active />\r\n                            </div>\r\n                        ) : (\r\n                            <Card title=\"Randevu Saati Seçimi\"\r\n                                hoverable\r\n                                bordered={true}\r\n                                style={cardStyle}\r\n                                headStyle={headStyle}>\r\n                                {appointmentCalenderList.map((appointmentCalender) => (\r\n                                    <Row>\r\n                                        <Col flex=\"150px\">{convertToFullDate(appointmentCalender.appointmentDate)} {appointmentCalender.dayOfWeek}</Col>\r\n                                        <Col flex=\"auto\">\r\n                                            <Row>\r\n                                                {\r\n                                                    appointmentCalender.appointmentHoursList.map((appointmentHour) => (\r\n                                                        <Col><Button onClick={() => showAppointmentModal(appointmentHour.startDate, appointmentHour.endDate, appointmentCalender.dayOfWeek)} disabled={!appointmentHour.isActive}>{getHourAndMinutes(appointmentHour.startDate)}</Button></Col>\r\n                                                    ))\r\n                                                }\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                ))}\r\n                                <Row>\r\n                                    <Col span={12} offset={10}>\r\n                                        <Button type=\"primary\" onClick={() => getPreviousWeekCalender()} style={{ marginTop: 20, marginLeft: 10, marginRight: 10 }}>Önceki Hafta</Button>\r\n                                        <Button type=\"primary\" onClick={() => getNextWeekCalender()}>Sonraki Hafta</Button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Card>)}\r\n\r\n                        <Modal title=\"Randevu Onayı\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                            <p>{modalContent}</p>\r\n                        </Modal>\r\n\r\n                    </Content>\r\n                    <MainFooter />\r\n                </Layout >\r\n            </Spin>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default NewAppointment;","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Common\\AppointmentResult.js",[],"C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\SaveAppointmentPlan.js",["201","202"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport BreadCrumbContext from \"../../contexts/BreadcrumbContext\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  TimePicker,\r\n  Select,\r\n  message,\r\n  ConfigProvider,\r\n  Card,\r\n  Input\r\n} from \"antd\";\r\nimport {\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport API from \"../../api\";\r\nimport \"moment/locale/tr\";\r\nimport locale from \"antd/lib/locale/tr_TR\";\r\nimport moment from \"moment\";\r\nimport { cardStyle, headStyle } from \"../../assets/styles/styles\";\r\n\r\nconst AppointmentPlan = () => {\r\n  let { planId } = useParams();\r\n  const [form] = Form.useForm();\r\n  const {\r\n    setFirstBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    setLastBreadcrumb,\r\n  } = useContext(BreadCrumbContext);\r\n  const history = useHistory();\r\n  const [, forceUpdate] = useState({}); // To disable submit button at the beginning.\r\n  const [loading, setLoading] = useState(false);\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [timeRanges, setTimeRanges] = useState([]);\r\n  const [size] = React.useState(\"default\");\r\n  const { Option } = Select;\r\n  const format = \"HH:mm\";\r\n  const { RangePicker } = TimePicker;\r\n  const [componentSize, setComponentSize] = useState(\"default\");\r\n  const token = localStorage.getItem(\"auth_token\");\r\n  moment.locale(\"tr-TR\");\r\n\r\n  const onFormLayoutChange = ({ size }) => {\r\n    setComponentSize(size);\r\n  };\r\n\r\n  const saveAppointmentPlan = (appointmentPlanForm) => {\r\n    setLoading(true);\r\n    var url = '';\r\n    if (parseInt(appointmentPlanForm.id) > 0) {\r\n      url = 'shop/updateAppointmentPlan';\r\n    }\r\n    else {\r\n      url = 'shop/createAppointmentPlan';\r\n    }\r\n    API.post(url, appointmentPlanForm, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        message.success(res.data.response);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n          message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n        } else {\r\n          message.error(error.response.data.message);\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n\r\n    const getAppointmentPlan = async () => {\r\n      setLoading(true);\r\n      if (planId > 0) {\r\n        debugger;\r\n        await API.get(`shop/getAppointmentPlanById?id=${planId}`, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        })\r\n          .then((res) => {\r\n            setLoading(false);\r\n            if (res.data !== \"\") {\r\n              var emptyTimeRange = null;\r\n              if (res.data.emptyTimeRange != null || res.data.emptyTimeRange != undefined) {\r\n                emptyTimeRange = [\r\n                  moment(res.data.emptyTimeRange[0], format),\r\n                  moment(res.data.emptyTimeRange[1], format),\r\n                ];\r\n              }\r\n\r\n              form.setFieldsValue({\r\n                weekdays: res.data.weekDays,\r\n                appointmentPeriod: parseInt(res.data.appointmentPeriod),\r\n                startTime: moment(res.data.startTime, format),\r\n                endTime: moment(res.data.endTime, format),\r\n                name: res.data.name,\r\n                emptyTimeRange\r\n                // appointmentLong: parseInt(res.data.appointmentLong),\r\n              });\r\n              setStartTime(moment(res.data.startTime, format));\r\n              setEndTime(moment(res.data.endTime, format));\r\n\r\n              if (res.data.emptyTimeRange != null) {\r\n                let times = [];\r\n                res.data.emptyTimeRange.map((item) => {\r\n                  if (item !== undefined) {\r\n                    times.push(item);\r\n                  }\r\n                  return times;\r\n                });\r\n                setTimeRanges(times);\r\n              }\r\n\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 401) {\r\n              history.push(\"/login\");\r\n              message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n            } else {\r\n              message.error(\r\n                error.response.data.message\r\n              );\r\n            }\r\n          });\r\n      }\r\n      setLoading(false);\r\n\r\n    };\r\n    getAppointmentPlan();\r\n    setFirstBreadcrumb(\"Anasayfa\");\r\n    setSecondBreadcrumb(\"Randevular\");\r\n    setLastBreadcrumb(\"Randevu Planı Yönetimi\");\r\n  }, [\r\n    form,\r\n    history,\r\n    setFirstBreadcrumb,\r\n    setLastBreadcrumb,\r\n    setSecondBreadcrumb,\r\n    token,\r\n  ]);\r\n\r\n  function handleChange(value) {\r\n    console.log(`Selected: ${value}`);\r\n  }\r\n\r\n  function onStartTimeChange(time, timeString) {\r\n    setStartTime(time);\r\n  }\r\n\r\n  function onEndTimeChange(time, timeString) {\r\n    setEndTime(time);\r\n  }\r\n\r\n  function onTimeRangeChange(time, timeString) {\r\n    var times = [];\r\n    if (time != null) {\r\n      time.map((item) => {\r\n        if (item !== undefined) {\r\n          times.push(item.format(\"HH:mm\"));\r\n        }\r\n        return times;\r\n      });\r\n    }\r\n    setTimeRanges(times);\r\n  }\r\n\r\n  const onFinish = (values) => {\r\n    const appointmentPlanForm = {\r\n      id: planId,\r\n      weekDays: values.weekdays,\r\n      appointmentPeriod: parseInt(values.appointmentPeriod),\r\n      startTime: startTime.format(\"HH:mm\"),\r\n      endTime: endTime.format(\"HH:mm\"),\r\n      emptyTimeRange: timeRanges,\r\n      name: values.name,\r\n      // appointmentLong: parseInt(values.appointmentLong),\r\n      appointmentLong: 60,\r\n    };\r\n    saveAppointmentPlan(appointmentPlanForm);\r\n  };\r\n\r\n  const layout = {\r\n    labelCol: {\r\n      span: 8,\r\n    },\r\n    wrapperCol: {\r\n      span: 10,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={22} offset={1}>\r\n          <Card\r\n            title=\"Randevu Planı Yönetimi\"\r\n            hoverable\r\n            bordered={true}\r\n            style={cardStyle}\r\n            headStyle={headStyle}\r\n          >\r\n            <Form\r\n              form={form}\r\n              {...layout}\r\n              name=\"createAppointmentForm\"\r\n              layout=\"horizontal\"\r\n              initialValues={{\r\n                size: componentSize,\r\n              }}\r\n              onValuesChange={onFormLayoutChange}\r\n              size={componentSize}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label=\"Plan Adı\"\r\n                name=\"name\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Boş Bırakmayınız!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input type=\"text\"></Input>\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Hizmet Verilen Günler\"\r\n                name=\"weekdays\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Boş Bırakmayınız!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  mode=\"tags\"\r\n                  size={size}\r\n                  placeholder=\"Seçiniz\"\r\n                  defaultValue={[]}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <Option value=\"1\" key=\"1\">\r\n                    Pazartesi\r\n                  </Option>\r\n                  <Option value=\"2\" key=\"2\">\r\n                    Salı\r\n                  </Option>\r\n                  <Option value=\"3\" key=\"3\">\r\n                    Çaşamba\r\n                  </Option>\r\n                  <Option value=\"4\" key=\"4\">\r\n                    Perşembe\r\n                  </Option>\r\n                  <Option value=\"5\" key=\"5\">\r\n                    Cuma\r\n                  </Option>\r\n                  <Option value=\"6\" key=\"6\">\r\n                    Cumartesi\r\n                  </Option>\r\n                  <Option value=\"0\" key=\"0\">\r\n                    Pazar\r\n                  </Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label=\"Randevu Period (Dakika)\"\r\n                name=\"appointmentPeriod\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Boş Bırakmayınız!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={size}\r\n                  placeholder=\"Seçiniz\"\r\n                  defaultValue={[]}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <Option key=\"15\">15</Option>\r\n                  <Option key=\"30\">30</Option>\r\n                  <Option key=\"60\">60</Option>\r\n                  <Option key=\"90\">90</Option>\r\n                </Select>\r\n              </Form.Item>\r\n\r\n              <ConfigProvider locale={locale}>\r\n                <Form.Item\r\n                  label=\"Açılış Saati\"\r\n                  name=\"startTime\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Lütfen Saat Giriniz!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <TimePicker\r\n                    onChange={onStartTimeChange}\r\n                    defaultValue={moment(\"00:00\", format)}\r\n                    format={format}\r\n                  />\r\n                </Form.Item>\r\n              </ConfigProvider>\r\n\r\n              <ConfigProvider locale={locale}>\r\n                <Form.Item\r\n                  label=\"Kapanış Saati\"\r\n                  name=\"endTime\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: \"Lütfen Saat Giriniz!\",\r\n                    },\r\n                  ]}\r\n                >\r\n                  <TimePicker\r\n                    onChange={onEndTimeChange}\r\n                    defaultValue={moment(\"00:00\", format)}\r\n                    format={format}\r\n                  />\r\n                </Form.Item>\r\n              </ConfigProvider>\r\n\r\n              <ConfigProvider locale={locale}>\r\n                <Form.Item\r\n                  label=\"Mola Aralığı\"\r\n                  name=\"emptyTimeRange\"\r\n                  labelCol={{ span: 8 }}\r\n                  wrapperCol={{ span: 18 }}\r\n                >\r\n                  <RangePicker\r\n                    format={format}\r\n                    onChange={onTimeRangeChange}\r\n                    defaultValue={moment(\"00:00\", format)}\r\n                  />\r\n                </Form.Item>\r\n              </ConfigProvider>\r\n\r\n              {/* <Form.Item\r\n                label=\"Hizmet Süresi\"\r\n                name=\"appointmentLong\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Boş Bırakmayınız!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={size}\r\n                  placeholder=\"Seçiniz\"\r\n                  defaultValue={[]}\r\n                  onChange={handleChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <Option key=\"15\">15 Gün</Option>\r\n                  <Option key=\"30\">1 Ay</Option>\r\n                  <Option key=\"60\">2 Ay</Option>\r\n                  <Option key=\"90\">3 Ay</Option>\r\n                  <Option key=\"180\">6 Ay</Option>\r\n                </Select>\r\n              </Form.Item> */}\r\n\r\n              <Form.Item\r\n                wrapperCol={{ ...layout.wrapperCol, offset: 8 }}\r\n                shouldUpdate={true}\r\n              >\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    loading={loading}\r\n                    htmlType=\"submit\"\r\n                    disabled={\r\n                      !!form\r\n                        .getFieldsError()\r\n                        .filter(({ errors }) => errors.length).length\r\n                    }\r\n                  >\r\n                    Kaydet\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default AppointmentPlan;\r\n","C:\\Users\\musta\\OneDrive\\Masaüstü\\appointment-react-web-app\\src\\components\\Shop\\AppointmentPlanList.js",[],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":24},{"ruleId":"207","severity":1,"message":"211","line":8,"column":10,"nodeType":"209","messageId":"210","endLine":8,"endColumn":30},{"ruleId":"207","severity":1,"message":"212","line":4,"column":8,"nodeType":"209","messageId":"210","endLine":4,"endColumn":22},{"ruleId":"207","severity":1,"message":"208","line":6,"column":10,"nodeType":"209","messageId":"210","endLine":6,"endColumn":24},{"ruleId":"207","severity":1,"message":"211","line":10,"column":10,"nodeType":"209","messageId":"210","endLine":10,"endColumn":30},{"ruleId":"213","severity":1,"message":"214","line":83,"column":6,"nodeType":"215","endLine":91,"endColumn":4,"suggestions":"216"},{"ruleId":"217","severity":1,"message":"218","line":71,"column":36,"nodeType":"219","messageId":"220","endLine":71,"endColumn":38},{"ruleId":"221","severity":1,"message":"222","line":217,"column":25,"nodeType":"223","endLine":223,"endColumn":26},{"ruleId":"224","severity":1,"message":"225","line":218,"column":34,"nodeType":"226","messageId":"227","endLine":218,"endColumn":48},{"ruleId":"221","severity":1,"message":"228","line":227,"column":29,"nodeType":"223","endLine":227,"endColumn":32},{"ruleId":"213","severity":1,"message":"229","line":182,"column":8,"nodeType":"215","endLine":182,"endColumn":18,"suggestions":"230"},{"ruleId":"217","severity":1,"message":"231","line":98,"column":78,"nodeType":"219","messageId":"220","endLine":98,"endColumn":80},{"ruleId":"213","severity":1,"message":"232","line":148,"column":6,"nodeType":"215","endLine":155,"endColumn":4,"suggestions":"233"},"no-native-reassign",["234"],"no-negated-in-lhs",["235"],"no-unused-vars","'appointmentHub' is defined but never used.","Identifier","unusedVar","'HubConnectionBuilder' is defined but never used.","'MyAppointments' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetch' and 'pagination'. Either include them or remove the dependency array.","ArrayExpression",["236"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'getWeeklyAppointments'. Either include it or remove the dependency array.",["237"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'planId'. Either include it or remove the dependency array.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]",{"range":"245","text":"246"},"Update the dependencies array to be: [getWeeklyAppointments, saloonId]",{"range":"247","text":"248"},"Update the dependencies array to be: [form, history, planId, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, token]",{"range":"249","text":"250"},[2582,2728],"[searchText, sortValue, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, header, fetch, pagination]",[7225,7235],"[getWeeklyAppointments, saloonId]",[4619,4737],"[form, history, planId, setFirstBreadcrumb, setLastBreadcrumb, setSecondBreadcrumb, token]"]