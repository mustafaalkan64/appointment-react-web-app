[{"C:\\React Eğitim\\appointment-app\\src\\reportWebVitals.js":"1","C:\\React Eğitim\\appointment-app\\src\\index.js":"2","C:\\React Eğitim\\appointment-app\\src\\components\\SideNav.js":"3","C:\\React Eğitim\\appointment-app\\src\\components\\App.js":"4","C:\\React Eğitim\\appointment-app\\src\\components\\CreateAppointment.js":"5","C:\\React Eğitim\\appointment-app\\src\\components\\MyPersonelInformations.js":"6","C:\\React Eğitim\\appointment-app\\src\\components\\UserHome.js":"7","C:\\React Eğitim\\appointment-app\\src\\components\\MyAppointments.js":"8","C:\\React Eğitim\\appointment-app\\src\\components\\NoMatch.js":"9","C:\\React Eğitim\\appointment-app\\src\\components\\myCanceledAppointments.js":"10","C:\\React Eğitim\\appointment-app\\src\\utils.js":"11","C:\\React Eğitim\\appointment-app\\src\\api.js":"12","C:\\React Eğitim\\appointment-app\\src\\components\\myActiveAppointments.js":"13","C:\\React Eğitim\\appointment-app\\src\\contexts\\UserContext.js":"14","C:\\React Eğitim\\appointment-app\\src\\components\\UserLayout.js":"15","C:\\React Eğitim\\appointment-app\\src\\components\\UserRegister.js":"16","C:\\React Eğitim\\appointment-app\\src\\components\\UserLogin.js":"17","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\index.js":"18","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserRegister.js":"19","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\MyAppointments.js":"20","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\myCanceledAppointments.js":"21","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\CreateAppointment.js":"22","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\MyPersonelInformations.js":"23","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\myActiveAppointments.js":"24","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserLayout.js":"25","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\SideNav.js":"26","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\ChangeMyPassword.js":"27","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserLogin.js":"28","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\reportWebVitals.js":"29","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\NoMatch.js":"30","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\contexts\\UserContext.js":"31","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\utils.js":"32"},{"size":362,"mtime":1609007864906,"results":"33","hashOfConfig":"34"},{"size":584,"mtime":1610525365889,"results":"35","hashOfConfig":"34"},{"size":2061,"mtime":1611212927050,"results":"36","hashOfConfig":"34"},{"size":337,"mtime":1610788894132,"results":"37","hashOfConfig":"34"},{"size":241,"mtime":1610115781098,"results":"38","hashOfConfig":"34"},{"size":12385,"mtime":1611424514676,"results":"39","hashOfConfig":"34"},{"size":227,"mtime":1610116313641,"results":"40","hashOfConfig":"34"},{"size":7669,"mtime":1611403442132,"results":"41","hashOfConfig":"34"},{"size":240,"mtime":1610117176107,"results":"42","hashOfConfig":"34"},{"size":248,"mtime":1610531756367,"results":"43","hashOfConfig":"34"},{"size":410,"mtime":1610566758993,"results":"44","hashOfConfig":"34"},{"size":107,"mtime":1610518256928,"results":"45","hashOfConfig":"34"},{"size":247,"mtime":1610531769167,"results":"46","hashOfConfig":"34"},{"size":650,"mtime":1611213046819,"results":"47","hashOfConfig":"34"},{"size":3807,"mtime":1611233439745,"results":"48","hashOfConfig":"34"},{"size":6189,"mtime":1611212634142,"results":"49","hashOfConfig":"34"},{"size":3327,"mtime":1611422832736,"results":"50","hashOfConfig":"34"},{"size":612,"mtime":1611425398044,"results":"51","hashOfConfig":"52"},{"size":6189,"mtime":1611212634142,"results":"53","hashOfConfig":"52"},{"size":9079,"mtime":1611771771765,"results":"54","hashOfConfig":"52"},{"size":248,"mtime":1610531756367,"results":"55","hashOfConfig":"52"},{"size":241,"mtime":1610115781098,"results":"56","hashOfConfig":"52"},{"size":12433,"mtime":1611514866497,"results":"57","hashOfConfig":"52"},{"size":247,"mtime":1610531769167,"results":"58","hashOfConfig":"52"},{"size":4611,"mtime":1611559772273,"results":"59","hashOfConfig":"52"},{"size":2613,"mtime":1611524358169,"results":"60","hashOfConfig":"52"},{"size":4446,"mtime":1611526909546,"results":"61","hashOfConfig":"52"},{"size":3310,"mtime":1611523599497,"results":"62","hashOfConfig":"52"},{"size":362,"mtime":1609007864906,"results":"63","hashOfConfig":"52"},{"size":240,"mtime":1610117176107,"results":"64","hashOfConfig":"52"},{"size":650,"mtime":1611213046819,"results":"65","hashOfConfig":"52"},{"size":410,"mtime":1610566758993,"results":"66","hashOfConfig":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"537vkm",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"1ls5gak",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React Eğitim\\appointment-app\\src\\reportWebVitals.js",[],["139","140"],"C:\\React Eğitim\\appointment-app\\src\\index.js",[],["141","142"],"C:\\React Eğitim\\appointment-app\\src\\components\\SideNav.js",[],["143","144"],"C:\\React Eğitim\\appointment-app\\src\\components\\App.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\CreateAppointment.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\MyPersonelInformations.js",["145"],"C:\\React Eğitim\\appointment-app\\src\\components\\UserHome.js",[],["146","147"],"C:\\React Eğitim\\appointment-app\\src\\components\\MyAppointments.js",["148","149","150","151","152","153","154"],"C:\\React Eğitim\\appointment-app\\src\\components\\NoMatch.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\myCanceledAppointments.js",[],["155","156"],"C:\\React Eğitim\\appointment-app\\src\\utils.js",[],"C:\\React Eğitim\\appointment-app\\src\\api.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\myActiveAppointments.js",[],"C:\\React Eğitim\\appointment-app\\src\\contexts\\UserContext.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\UserLayout.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\UserRegister.js",[],"C:\\React Eğitim\\appointment-app\\src\\components\\UserLogin.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\index.js",[],["157","158"],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserRegister.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\MyAppointments.js",["159","160","161","162","163","164","165"],"//src/components/pages/list.tsx\r\nimport React, { useEffect, useState, useCallback, useContext } from \"react\";\r\nimport { Table, Row, Col, Button, Typography, Input, Modal } from \"antd\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Tag, Space, message, Spin, Select } from \"antd\";\r\nimport API from \"./../api\";\r\nimport { serialize } from \"./../utils\";\r\nimport UserContext from \"./../contexts/UserContext\";\r\nconst { TextArea } = Input;\r\n\r\nexport default function MyAppointments(props) {\r\n  const { Title } = Typography;\r\n  const history = useHistory();\r\n  const [myAppointments, setAppointmentData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [sortValue, setSortValue] = useState(\"\");\r\n  const type = props.isCanceled ? 0 : 1;\r\n  const { token } = useContext(UserContext);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [appointmentCancelReason, setAppointmentCancelReason] = useState(\"\");\r\n  const [selectedAppointmentId, setSelectedAppointmentId] = useState(0);\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const showModel = (obj) => {\r\n    setIsModalVisible(true);\r\n    setSelectedAppointmentId(obj.id);\r\n    setAppointmentCancelReason(\"\");\r\n  };\r\n\r\n  const handleOk = () => {\r\n    cancelAppointment(selectedAppointmentId, appointmentCancelReason);\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const pageHeader = props.isCanceled\r\n    ? \"İptal Ettiğim Randevularım\"\r\n    : \"Aktif Randevularım\";\r\n  const { Option } = Select;\r\n\r\n  const handleClick = () => {\r\n    history.push(\"/form\");\r\n  };\r\n\r\n  const handleSortChange = useCallback(\r\n    (value) => {\r\n      setSortValue(value);\r\n    },\r\n    [sortValue]\r\n  );\r\n\r\n  useEffect(() => {\r\n    fetch({ pagination });\r\n  }, [sortValue, searchText]);\r\n\r\n  const cancelAppointment = async (appointmentId, cancelReasonText) => {\r\n    if (window.confirm(\"Randevuyu İptal Etmek İstediğinize Emin misiniz?\")) {\r\n      const cancelReason = {\r\n        CancelReason: cancelReasonText,\r\n      };\r\n      await API.put(\r\n        `Appointment/cancelAppointment/${appointmentId}`,\r\n        cancelReason,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      )\r\n        .then((res) => {\r\n          message.success(\"Randevunuzu İptal Ettiniz.\");\r\n          fetch({ pagination });\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else if (error.response.status === 404) {\r\n            message.warning(\"Böyle Bir Randevu Bulunamadı\");\r\n          } else {\r\n            message.error(error.response.data);\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  const convertWithoutTimeZone = (datetime) => {\r\n    var d = new Date(datetime);\r\n    var month = d.getUTCMonth() + 1; //months from 1-12\r\n    var day = d.getDate();\r\n    var year = d.getUTCFullYear();\r\n\r\n    var newdate = day + \".\" + month + \".\" + year;\r\n    return newdate;\r\n  };\r\n\r\n  const handleTableChange = (pagination, filters, sorter) => {\r\n    fetch({\r\n      pagination,\r\n    });\r\n  };\r\n\r\n  const handleChangeSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n    setPagination({\r\n      current: 1,\r\n      pageSize: 10,\r\n    });\r\n  };\r\n\r\n  const fetch = async (params) => {\r\n    setLoading(true);\r\n    var queryString = serialize({\r\n      current: params.pagination.current,\r\n      pageSize: params.pagination.pageSize,\r\n      type: type,\r\n      searchText,\r\n      sortValue,\r\n    });\r\n    await API.get(`Appointment/getByUserId?${queryString}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setAppointmentData(res.data.item1);\r\n        setLoading(false);\r\n        setPagination({\r\n          ...params.pagination,\r\n          total: res.data.item2,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n          message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n        } else {\r\n          message.error(\"Randevuları Getirme Esnasında Hata ile Karşılaşıldı!\");\r\n        }\r\n      });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Id\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n    },\r\n    {\r\n      title: \"Mağaza\",\r\n      dataIndex: \"shopTitle\",\r\n      key: \"shopTitle\",\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: \"Randevu Tarihi\",\r\n      dataIndex: \"appointmentDate\",\r\n      key: \"appointmentDate\",\r\n      render: (date) => <a>{convertWithoutTimeZone(date)}</a>,\r\n    },\r\n    {\r\n      title: \"Başlangıç Saati\",\r\n      dataIndex: \"beginDate\",\r\n      key: \"beginDate\",\r\n    },\r\n    {\r\n      title: \"Bitiş Saati\",\r\n      dataIndex: \"endDate\",\r\n      key: \"endDate\",\r\n    },\r\n    {\r\n      title: \"Durumu\",\r\n      key: \"status\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (\r\n        <div>\r\n          <Tag color={status === 1 ? \"green\" : \"red\"}>\r\n            {status == 1 ? \"Aktif\" : \"Pasif\"}\r\n          </Tag>\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Randevu Aldığım Hizmetler\",\r\n      key: \"appointmentServices\",\r\n      dataIndex: \"appointmentServices\",\r\n      render: (appointmentServices) => (\r\n        <div>\r\n          {appointmentServices.map((service) => {\r\n            let color =\r\n              service.services.serviceName.length > 5 ? \"geekblue\" : \"green\";\r\n            if (service.services.serviceName === \"loser\") {\r\n              color = \"volcano\";\r\n            }\r\n            return (\r\n              <Tag color={color} key={service.services.id}>\r\n                {service.services.serviceName.toUpperCase()}\r\n              </Tag>\r\n            );\r\n          })}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      key: \"id\",\r\n\r\n      render: (text, obj) => (\r\n        <Space size=\"middle\">\r\n          <Button\r\n            disabled={obj.status === 0}\r\n            block\r\n            type={obj.status === 1 ? \"danger\" : \"primary\"}\r\n            onClick={() => showModel(obj)}\r\n          >\r\n            {obj.status == 1 ? \"İptal Et\" : \"Aktif Et\"}\r\n          </Button>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  myAppointments.map((data) => {\r\n    data.shopTitle = data.shops.shopTitle;\r\n    return data;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={18}>\r\n          <Title level={2}>{pageHeader}</Title>\r\n        </Col>\r\n        <Col span={6}>\r\n          <Button onClick={handleClick} block type=\"primary\">\r\n            Yeni Randevu Talep Et\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Input placeholder=\"Ara..\" onChange={handleChangeSearch} />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Select\r\n            defaultValue=\"Seçiniz\"\r\n            onChange={handleSortChange}\r\n            style={{ width: \"100%\" }}\r\n          >\r\n            <Option key={\"ascByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Artan\r\n            </Option>\r\n            <Option key={\"descByCreatedDate\"}>\r\n              Oluşturulma Tarihine Göre Azalan\r\n            </Option>\r\n            <Option key={\"ascByAppointmentDate\"}>\r\n              En Yakın Tarihli Randevuya Göre\r\n            </Option>\r\n            <Option key={\"descByAppointmentDate\"}>\r\n              En Uzak Tarihli Randevuya Göre\r\n            </Option>\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={[40, 0]}>\r\n        <Col span={24}>\r\n          {loading ? (\r\n            <div className=\"spinClass\">\r\n              <Space size=\"middle\">\r\n                <Spin size=\"large\" />\r\n              </Space>\r\n            </div>\r\n          ) : (\r\n            <Table\r\n              columns={columns}\r\n              rowKey={(record) => record.id}\r\n              pagination={pagination}\r\n              loading={loading}\r\n              onChange={handleTableChange}\r\n              dataSource={myAppointments}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        title=\"Randevu İptal\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        okButtonProps={{\r\n          disabled: appointmentCancelReason == \"\" ? true : false,\r\n        }}\r\n        onCancel={handleCancel}\r\n      >\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>Randevu İptal Nedeni</Col>\r\n        </Row>\r\n        <Row gutter={[40, 0]}>\r\n          <Col span={24}>\r\n            <TextArea\r\n              showCount\r\n              value={appointmentCancelReason}\r\n              onChange={(event) =>\r\n                setAppointmentCancelReason(event.target.value)\r\n              }\r\n              maxLength={500}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\myCanceledAppointments.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\CreateAppointment.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\MyPersonelInformations.js",["166"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport UserContext from \"./../contexts/UserContext\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  Select,\r\n  Typography,\r\n  ConfigProvider,\r\n  message,\r\n} from \"antd\";\r\nimport API from \"./../api\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport \"moment/locale/tr\";\r\nimport locale from \"antd/lib/locale/tr_TR\";\r\nimport moment from \"moment\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst MyPersonelInformations = () => {\r\n  const [form] = Form.useForm();\r\n  const { token } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [, forceUpdate] = useState({}); // To disable submit button at the beginning.\r\n  const [cities, setCities] = useState([]);\r\n  const [loading, setLoading] = useState([]);\r\n  const [districts, setDistricts] = useState([]);\r\n  const [zones, setZones] = useState([]);\r\n  const [birthday, setBirthday] = useState([]);\r\n  const dateFormat = \"DD.MM.YYYY\";\r\n\r\n  const style = { padding: \"8px 0\" };\r\n\r\n  const setCurrenUser = (userForm) => {\r\n    setLoading(true);\r\n    API.put(`User/updateUser`, userForm, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.status) {\r\n          message.success(res.data.response);\r\n        } else {\r\n          message.error(res.data.response);\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        setLoading(false);\r\n        if (error.response.status === 401) {\r\n          history.push(\"/login\");\r\n          message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n        } else {\r\n          message.error(\r\n            \"Kişisel Bilgileri Güncelleme Sırasında Hata ile Karşılaşıldı!\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  const getCities = async () => {\r\n    await API.get(`Place/getCities`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setCities(res.data);\r\n        console.log(form.city);\r\n        console.log(cities);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Şehirleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const getDistricts = async (cityId) => {\r\n    await API.get(`Place/getDistrictsByCityId?cityId=${cityId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setDistricts(res.data);\r\n        console.log(cities);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"İlçeleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  const getZones = async (districtId) => {\r\n    await API.get(`Place/GetZonesByDistrictId?districtId=${districtId}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((res) => {\r\n        setZones(res.data);\r\n        console.log(cities);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"Bölgeleri Getirme Sırasında Hata ile Karşılaşıldı\");\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    forceUpdate({});\r\n    const getCurrentUser = async () => {\r\n      setLoading(true);\r\n      await API.get(`User/currentUser?`, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      })\r\n        .then((res) => {\r\n          setLoading(false);\r\n          var d = new Date(res.data.birthday);\r\n          var birthday = d.toLocaleString(\"tr-TR\").substring(0, 10);\r\n          setBirthday(res.data.birthday);\r\n          form.setFieldsValue({\r\n            name: res.data.firstName,\r\n            surname: res.data.lastName,\r\n            email: res.data.email,\r\n            birthDay: birthday,\r\n            city: res.data.cityId,\r\n            district: res.data.districtId,\r\n            zone: res.data.zoneId,\r\n          });\r\n          getDistricts(res.data.cityId);\r\n          getZones(res.data.districtId);\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 401) {\r\n            history.push(\"/login\");\r\n            message.error(\"Bu İşlemi Yapmaya Yetkiniz Yok!\");\r\n          } else {\r\n            message.error(\r\n              \"Kişisel Bilgileri Getirme Esnasında Hata ile Karşılaşıldı!\"\r\n            );\r\n          }\r\n        });\r\n    };\r\n    getCities();\r\n    getCurrentUser();\r\n  }, []);\r\n\r\n  const handleCityChange = (value) => {\r\n    setDistricts([]);\r\n    form.setFieldsValue({\r\n      district: \"\",\r\n      zone: \"\",\r\n    });\r\n    getDistricts(value);\r\n  };\r\n\r\n  const handleDistrictChange = (value) => {\r\n    setZones([]);\r\n    form.setFieldsValue({\r\n      zone: \"\",\r\n    });\r\n    getZones(value);\r\n  };\r\n\r\n  const handleZoneChange = (value) => {};\r\n\r\n  const onBirthdayChange = (date, dateString) => {\r\n    form.setFieldsValue({\r\n      birthDay: dateString,\r\n    });\r\n  };\r\n\r\n  const onFinish = (values) => {\r\n    const userForm = {\r\n      Name: values.name,\r\n      Surname: values.surname,\r\n      CityId: values.city,\r\n      DistrictId: values.district,\r\n      ZoneId: values.zone,\r\n      BirthDay: values.birthDay,\r\n    };\r\n    setCurrenUser(userForm);\r\n  };\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col span={23}>\r\n          <Title style={{ textAlign: \"center\" }} level={2}>\r\n            Kişisel Bilgilerim\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form\r\n        form={form}\r\n        name=\"horizontal_login\"\r\n        layout=\"horizontal\"\r\n        onFinish={onFinish}\r\n      >\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={8} offset={4}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                label=\"İsim\"\r\n                name=\"name\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 18 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen İsminizi Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"İsim\"\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                name=\"surname\"\r\n                label=\"Soyisim\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 20 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Soyisminizi Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input\r\n                  prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                  placeholder=\"Soyisim\"\r\n                />\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={8} offset={4}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                name=\"birthDay\"\r\n                label=\"Doğum Tarihi\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 18 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Doğum Tarihinizi Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <ConfigProvider locale={locale}>\r\n                  <DatePicker\r\n                    format={dateFormat}\r\n                    defaultValue={moment(birthday)}\r\n                    onChange={onBirthdayChange}\r\n                    placeholder=\"Doğum Tarihiniz\"\r\n                    style={{ width: \"100%\" }}\r\n                  />\r\n                </ConfigProvider>\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                name=\"email\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 20 }}\r\n                label=\"Email\"\r\n              >\r\n                <Input placeholder=\"email\" disabled=\"disabled\" />\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={8} offset={4}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                name=\"city\"\r\n                label=\"İl\"\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 18 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen İl Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleCityChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {cities.map((city, key) => {\r\n                    return (\r\n                      <option value={city.id} key={city.id}>\r\n                        {city.cityName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n          <Col className=\"gutter-row\" span={8}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                name=\"district\"\r\n                label=\"İlçe\"\r\n                labelCol={{ span: 4 }}\r\n                wrapperCol={{ span: 20 }}\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen İlçe Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleDistrictChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {districts.map((district, key) => {\r\n                    return (\r\n                      <option value={district.id} key={district.id}>\r\n                        {district.districtName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={8} offset={4}>\r\n            <div style={style}>\r\n              <Form.Item\r\n                labelCol={{ span: 6 }}\r\n                wrapperCol={{ span: 18 }}\r\n                name=\"zone\"\r\n                label=\"Köy/Mahalle\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Lütfen Semt/Mahalle Giriniz!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Select\r\n                  size={\"default\"}\r\n                  onChange={handleZoneChange}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  {zones.map((zone, key) => {\r\n                    return (\r\n                      <option value={zone.id} key={zone.id}>\r\n                        {zone.zoneName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n          <Col className=\"gutter-row\" span={8} offset={6}>\r\n            <div style={style}>\r\n              <Form.Item shouldUpdate={true}>\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    loading={loading}\r\n                    htmlType=\"submit\"\r\n                    disabled={\r\n                      !!form\r\n                        .getFieldsError()\r\n                        .filter(({ errors }) => errors.length).length\r\n                    }\r\n                  >\r\n                    Kaydet\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default MyPersonelInformations;\r\n","C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\myActiveAppointments.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserLayout.js",["167"],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\SideNav.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\ChangeMyPassword.js",["168"],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\UserLogin.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\components\\NoMatch.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\contexts\\UserContext.js",[],"C:\\Users\\Asus\\OneDrive\\Belgeler\\GitHub\\appointment-react-web-app\\src\\utils.js",[],{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"169","replacedBy":"173"},{"ruleId":"171","replacedBy":"174"},{"ruleId":"169","replacedBy":"175"},{"ruleId":"171","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":153,"column":6,"nodeType":"179","endLine":153,"endColumn":8,"suggestions":"180"},{"ruleId":"169","replacedBy":"181"},{"ruleId":"171","replacedBy":"182"},{"ruleId":"177","severity":1,"message":"183","line":31,"column":6,"nodeType":"179","endLine":31,"endColumn":8,"suggestions":"184"},{"ruleId":"177","severity":1,"message":"185","line":41,"column":5,"nodeType":"179","endLine":41,"endColumn":16,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"183","line":46,"column":6,"nodeType":"179","endLine":46,"endColumn":29,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":141,"column":25,"nodeType":"190","endLine":141,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":147,"column":25,"nodeType":"190","endLine":147,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":166,"column":21,"nodeType":"193","messageId":"194","endLine":166,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":204,"column":25,"nodeType":"193","messageId":"194","endLine":204,"endColumn":27},{"ruleId":"169","replacedBy":"195"},{"ruleId":"171","replacedBy":"196"},{"ruleId":"169","replacedBy":"197"},{"ruleId":"171","replacedBy":"198"},{"ruleId":"177","severity":1,"message":"185","line":57,"column":5,"nodeType":"179","endLine":57,"endColumn":16,"suggestions":"199"},{"ruleId":"177","severity":1,"message":"183","line":62,"column":6,"nodeType":"179","endLine":62,"endColumn":29,"suggestions":"200"},{"ruleId":"188","severity":1,"message":"189","line":163,"column":25,"nodeType":"190","endLine":163,"endColumn":28},{"ruleId":"188","severity":1,"message":"189","line":169,"column":25,"nodeType":"190","endLine":169,"endColumn":28},{"ruleId":"191","severity":1,"message":"192","line":188,"column":21,"nodeType":"193","messageId":"194","endLine":188,"endColumn":23},{"ruleId":"191","severity":1,"message":"192","line":226,"column":25,"nodeType":"193","messageId":"194","endLine":226,"endColumn":27},{"ruleId":"191","severity":1,"message":"192","line":300,"column":45,"nodeType":"193","messageId":"194","endLine":300,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":153,"column":6,"nodeType":"179","endLine":153,"endColumn":8,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":14,"column":36,"nodeType":"204","messageId":"205","endLine":14,"endColumn":46},{"ruleId":"191","severity":1,"message":"206","line":117,"column":64,"nodeType":"193","messageId":"194","endLine":117,"endColumn":66},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],["207"],["208"],["207"],["208"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'form', 'getCities', 'getDistricts', 'getZones', 'history', and 'token'. Either include them or remove the dependency array.","ArrayExpression",["209"],["207"],["208"],"React Hook useEffect has missing dependencies: 'fetch' and 'pagination'. Either include them or remove the dependency array.",["210"],"React Hook useCallback has an unnecessary dependency: 'sortValue'. Either exclude it or remove the dependency array.",["211"],["212"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["207"],["208"],["207"],["208"],["213"],["214"],["215"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"220","fix":"224"},{"desc":"222","fix":"225"},{"desc":"216","fix":"226"},"Update the dependencies array to be: [form, getCities, getDistricts, getZones, history, token]",{"range":"227","text":"228"},"Update the dependencies array to be: [fetch, pagination]",{"range":"229","text":"230"},"Update the dependencies array to be: []",{"range":"231","text":"232"},"Update the dependencies array to be: [sortValue, searchText, fetch, pagination]",{"range":"233","text":"234"},{"range":"235","text":"232"},{"range":"236","text":"234"},{"range":"237","text":"228"},[4386,4388],"[form, getCities, getDistricts, getZones, history, token]",[1111,1113],"[fetch, pagination]",[1285,1296],"[]",[1360,1383],"[sortValue, searchText, fetch, pagination]",[1834,1845],[1909,1932],[4434,4436]]